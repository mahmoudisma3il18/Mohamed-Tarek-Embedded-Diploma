
Challenge.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009b8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000009b8  00000a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  0080006a  0080006a  00000a56  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a56  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ab4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000af0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f11  00000000  00000000  00000bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008b7  00000000  00000000  00001ad1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000667  00000000  00000000  00002388  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d8  00000000  00000000  000029f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005cd  00000000  00000000  00002bc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000604  00000000  00000000  00003195  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  00003799  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__vector_5>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 eb       	ldi	r30, 0xB8	; 184
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a1 37       	cpi	r26, 0x71	; 113
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 75 01 	call	0x2ea	; 0x2ea <main>
  8a:	0c 94 da 04 	jmp	0x9b4	; 0x9b4 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__vector_5>:
/************************************************************************/
/*                     ISR                                              */
/************************************************************************/

ISR(TIMER1_CAPT_vect)
{
  92:	1f 92       	push	r1
  94:	0f 92       	push	r0
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	2f 93       	push	r18
  9e:	3f 93       	push	r19
  a0:	4f 93       	push	r20
  a2:	5f 93       	push	r21
  a4:	6f 93       	push	r22
  a6:	7f 93       	push	r23
  a8:	8f 93       	push	r24
  aa:	9f 93       	push	r25
  ac:	af 93       	push	r26
  ae:	bf 93       	push	r27
  b0:	ef 93       	push	r30
  b2:	ff 93       	push	r31
	if(g_callBackPtr != ((void*)0))
  b4:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <__data_end>
  b8:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <__data_end+0x1>
  bc:	30 97       	sbiw	r30, 0x00	; 0
  be:	09 f0       	breq	.+2      	; 0xc2 <__vector_5+0x30>
	{
		g_callBackPtr();
  c0:	09 95       	icall
	}
}
  c2:	ff 91       	pop	r31
  c4:	ef 91       	pop	r30
  c6:	bf 91       	pop	r27
  c8:	af 91       	pop	r26
  ca:	9f 91       	pop	r25
  cc:	8f 91       	pop	r24
  ce:	7f 91       	pop	r23
  d0:	6f 91       	pop	r22
  d2:	5f 91       	pop	r21
  d4:	4f 91       	pop	r20
  d6:	3f 91       	pop	r19
  d8:	2f 91       	pop	r18
  da:	0f 90       	pop	r0
  dc:	0f be       	out	0x3f, r0	; 63
  de:	0f 90       	pop	r0
  e0:	1f 90       	pop	r1
  e2:	18 95       	reti

000000e4 <ICU_init>:

void ICU_init(const ICU_ConfigType *Congig_ptr)
{
  e4:	fc 01       	movw	r30, r24
	DDRD &= ~(1<<PD6);
  e6:	91 b3       	in	r25, 0x11	; 17
  e8:	9f 7b       	andi	r25, 0xBF	; 191
  ea:	91 bb       	out	0x11, r25	; 17
	
	TCCR1A |= (1<<FOC1A) | (1<<FOC1B); // NON PWM Mode
  ec:	9f b5       	in	r25, 0x2f	; 47
  ee:	9c 60       	ori	r25, 0x0C	; 12
  f0:	9f bd       	out	0x2f, r25	; 47
	
	TCCR1B = (TCCR1B & 0xF8) | (Congig_ptr->Clock); // Set clock frequency
  f2:	9e b5       	in	r25, 0x2e	; 46
  f4:	20 81       	ld	r18, Z
  f6:	98 7f       	andi	r25, 0xF8	; 248
  f8:	92 2b       	or	r25, r18
  fa:	9e bd       	out	0x2e, r25	; 46
	
	TCCR1B = (TCCR1B & 0xBF) | ((Congig_ptr->Edge)<<6); // Set Edge type
  fc:	2e b5       	in	r18, 0x2e	; 46
  fe:	91 81       	ldd	r25, Z+1	; 0x01
 100:	30 e4       	ldi	r19, 0x40	; 64
 102:	93 9f       	mul	r25, r19
 104:	c0 01       	movw	r24, r0
 106:	11 24       	eor	r1, r1
 108:	92 2f       	mov	r25, r18
 10a:	9f 7b       	andi	r25, 0xBF	; 191
 10c:	89 2b       	or	r24, r25
 10e:	8e bd       	out	0x2e, r24	; 46
	
	TIMSK |= (1<<TICIE1); // Enable ICU Interrupt
 110:	89 b7       	in	r24, 0x39	; 57
 112:	80 62       	ori	r24, 0x20	; 32
 114:	89 bf       	out	0x39, r24	; 57
	
	TCNT1 = 0;
 116:	1d bc       	out	0x2d, r1	; 45
 118:	1c bc       	out	0x2c, r1	; 44
	
	ICR1=0;  
 11a:	17 bc       	out	0x27, r1	; 39
 11c:	16 bc       	out	0x26, r1	; 38
 11e:	08 95       	ret

00000120 <ICU_setCallBack>:
	
}

ICU_setCallBack(void(*a_ptr)(void))
{
	g_callBackPtr = a_ptr;
 120:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__data_end+0x1>
 124:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
 128:	08 95       	ret

0000012a <ICU_setEdgeDetection>:
}

ICU_setEdgeDetection(const ICU_EdgeType edgeType)
{
	TCCR1B = (TCCR1B & 0xBF) | (edgeType<<6); // Set Edge type
 12a:	2e b5       	in	r18, 0x2e	; 46
 12c:	30 e4       	ldi	r19, 0x40	; 64
 12e:	83 9f       	mul	r24, r19
 130:	c0 01       	movw	r24, r0
 132:	11 24       	eor	r1, r1
 134:	2f 7b       	andi	r18, 0xBF	; 191
 136:	82 2b       	or	r24, r18
 138:	8e bd       	out	0x2e, r24	; 46
 13a:	08 95       	ret

0000013c <ICU_clearTimer>:
}

void ICU_clearTimer()
{
	TCNT1 = 0;
 13c:	1d bc       	out	0x2d, r1	; 45
 13e:	1c bc       	out	0x2c, r1	; 44
 140:	08 95       	ret

00000142 <ICU_getValue>:
}

uint16_t ICU_getValue()
{
	return ICR1;
 142:	86 b5       	in	r24, 0x26	; 38
 144:	97 b5       	in	r25, 0x27	; 39
}
 146:	08 95       	ret

00000148 <ICU_deinit>:

void ICU_deinit()
{
	TCCR1A = 0;
 148:	1f bc       	out	0x2f, r1	; 47

	TCCR1B = 0;
 14a:	1e bc       	out	0x2e, r1	; 46
	
	TCNT1 = 0;
 14c:	1d bc       	out	0x2d, r1	; 45
 14e:	1c bc       	out	0x2c, r1	; 44
	
	ICR1=0;
 150:	17 bc       	out	0x27, r1	; 39
 152:	16 bc       	out	0x26, r1	; 38
	
	TIMSK &= ~(1<<TICIE1); // Disable ICU Interrupt
 154:	89 b7       	in	r24, 0x39	; 57
 156:	8f 7d       	andi	r24, 0xDF	; 223
 158:	89 bf       	out	0x39, r24	; 57
 15a:	08 95       	ret

0000015c <LCD_sendCommand>:
	LCD_displayString(String);
}

void LCD_clearScreen()
{
	LCD_sendCommand(CLEAR_DISPLAY);
 15c:	92 b3       	in	r25, 0x12	; 18
 15e:	9f 7e       	andi	r25, 0xEF	; 239
 160:	92 bb       	out	0x12, r25	; 18
 162:	92 b3       	in	r25, 0x12	; 18
 164:	9f 7d       	andi	r25, 0xDF	; 223
 166:	92 bb       	out	0x12, r25	; 18
 168:	e9 ef       	ldi	r30, 0xF9	; 249
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	31 97       	sbiw	r30, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <LCD_sendCommand+0x10>
 170:	00 c0       	rjmp	.+0      	; 0x172 <LCD_sendCommand+0x16>
 172:	00 00       	nop
 174:	92 b3       	in	r25, 0x12	; 18
 176:	90 68       	ori	r25, 0x80	; 128
 178:	92 bb       	out	0x12, r25	; 18
 17a:	e9 ef       	ldi	r30, 0xF9	; 249
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	31 97       	sbiw	r30, 0x01	; 1
 180:	f1 f7       	brne	.-4      	; 0x17e <LCD_sendCommand+0x22>
 182:	00 c0       	rjmp	.+0      	; 0x184 <LCD_sendCommand+0x28>
 184:	00 00       	nop
 186:	85 bb       	out	0x15, r24	; 21
 188:	89 ef       	ldi	r24, 0xF9	; 249
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	01 97       	sbiw	r24, 0x01	; 1
 18e:	f1 f7       	brne	.-4      	; 0x18c <LCD_sendCommand+0x30>
 190:	00 c0       	rjmp	.+0      	; 0x192 <LCD_sendCommand+0x36>
 192:	00 00       	nop
 194:	82 b3       	in	r24, 0x12	; 18
 196:	8f 77       	andi	r24, 0x7F	; 127
 198:	82 bb       	out	0x12, r24	; 18
 19a:	e9 ef       	ldi	r30, 0xF9	; 249
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	31 97       	sbiw	r30, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <LCD_sendCommand+0x42>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <LCD_sendCommand+0x48>
 1a4:	00 00       	nop
 1a6:	08 95       	ret

000001a8 <LCD_init>:
 1a8:	81 b3       	in	r24, 0x11	; 17
 1aa:	80 6b       	ori	r24, 0xB0	; 176
 1ac:	81 bb       	out	0x11, r24	; 17
 1ae:	8f ef       	ldi	r24, 0xFF	; 255
 1b0:	84 bb       	out	0x14, r24	; 20
 1b2:	88 e3       	ldi	r24, 0x38	; 56
 1b4:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_sendCommand>
 1b8:	8f e0       	ldi	r24, 0x0F	; 15
 1ba:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_sendCommand>
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	0e 94 ae 00 	call	0x15c	; 0x15c <LCD_sendCommand>
 1c4:	08 95       	ret

000001c6 <LCD_displayCharacter>:
 1c6:	92 b3       	in	r25, 0x12	; 18
 1c8:	90 61       	ori	r25, 0x10	; 16
 1ca:	92 bb       	out	0x12, r25	; 18
 1cc:	92 b3       	in	r25, 0x12	; 18
 1ce:	9f 7d       	andi	r25, 0xDF	; 223
 1d0:	92 bb       	out	0x12, r25	; 18
 1d2:	e9 ef       	ldi	r30, 0xF9	; 249
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
 1d6:	31 97       	sbiw	r30, 0x01	; 1
 1d8:	f1 f7       	brne	.-4      	; 0x1d6 <LCD_displayCharacter+0x10>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <LCD_displayCharacter+0x16>
 1dc:	00 00       	nop
 1de:	92 b3       	in	r25, 0x12	; 18
 1e0:	90 68       	ori	r25, 0x80	; 128
 1e2:	92 bb       	out	0x12, r25	; 18
 1e4:	e9 ef       	ldi	r30, 0xF9	; 249
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	31 97       	sbiw	r30, 0x01	; 1
 1ea:	f1 f7       	brne	.-4      	; 0x1e8 <LCD_displayCharacter+0x22>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <LCD_displayCharacter+0x28>
 1ee:	00 00       	nop
 1f0:	85 bb       	out	0x15, r24	; 21
 1f2:	89 ef       	ldi	r24, 0xF9	; 249
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	01 97       	sbiw	r24, 0x01	; 1
 1f8:	f1 f7       	brne	.-4      	; 0x1f6 <LCD_displayCharacter+0x30>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <LCD_displayCharacter+0x36>
 1fc:	00 00       	nop
 1fe:	82 b3       	in	r24, 0x12	; 18
 200:	8f 77       	andi	r24, 0x7F	; 127
 202:	82 bb       	out	0x12, r24	; 18
 204:	e9 ef       	ldi	r30, 0xF9	; 249
 206:	f0 e0       	ldi	r31, 0x00	; 0
 208:	31 97       	sbiw	r30, 0x01	; 1
 20a:	f1 f7       	brne	.-4      	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
 20c:	00 c0       	rjmp	.+0      	; 0x20e <__EEPROM_REGION_LENGTH__+0xe>
 20e:	00 00       	nop
 210:	08 95       	ret

00000212 <LCD_displayString>:
 212:	cf 93       	push	r28
 214:	df 93       	push	r29
 216:	ec 01       	movw	r28, r24
 218:	03 c0       	rjmp	.+6      	; 0x220 <LCD_displayString+0xe>
 21a:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <LCD_displayCharacter>
 21e:	21 96       	adiw	r28, 0x01	; 1
 220:	88 81       	ld	r24, Y
 222:	81 11       	cpse	r24, r1
 224:	fa cf       	rjmp	.-12     	; 0x21a <LCD_displayString+0x8>
 226:	df 91       	pop	r29
 228:	cf 91       	pop	r28
 22a:	08 95       	ret

0000022c <LCD_integrToString>:
}

void LCD_integrToString(uint32_t data)
{
 22c:	0f 93       	push	r16
 22e:	1f 93       	push	r17
 230:	cf 93       	push	r28
 232:	df 93       	push	r29
 234:	00 d0       	rcall	.+0      	; 0x236 <LCD_integrToString+0xa>
 236:	00 d0       	rcall	.+0      	; 0x238 <LCD_integrToString+0xc>
 238:	cd b7       	in	r28, 0x3d	; 61
 23a:	de b7       	in	r29, 0x3e	; 62
	uint8_t buffer[4]={0};
 23c:	19 82       	std	Y+1, r1	; 0x01
 23e:	1a 82       	std	Y+2, r1	; 0x02
 240:	1b 82       	std	Y+3, r1	; 0x03
 242:	1c 82       	std	Y+4, r1	; 0x04
	sprintf(buffer,"%d",data);
 244:	9f 93       	push	r25
 246:	8f 93       	push	r24
 248:	7f 93       	push	r23
 24a:	6f 93       	push	r22
 24c:	80 e6       	ldi	r24, 0x60	; 96
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	9f 93       	push	r25
 252:	8f 93       	push	r24
 254:	8e 01       	movw	r16, r28
 256:	0f 5f       	subi	r16, 0xFF	; 255
 258:	1f 4f       	sbci	r17, 0xFF	; 255
 25a:	1f 93       	push	r17
 25c:	0f 93       	push	r16
 25e:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <sprintf>
	LCD_displayString(buffer);
 262:	c8 01       	movw	r24, r16
 264:	0e 94 09 01 	call	0x212	; 0x212 <LCD_displayString>
}
 268:	0f b6       	in	r0, 0x3f	; 63
 26a:	f8 94       	cli
 26c:	de bf       	out	0x3e, r29	; 62
 26e:	0f be       	out	0x3f, r0	; 63
 270:	cd bf       	out	0x3d, r28	; 61
 272:	0f 90       	pop	r0
 274:	0f 90       	pop	r0
 276:	0f 90       	pop	r0
 278:	0f 90       	pop	r0
 27a:	df 91       	pop	r29
 27c:	cf 91       	pop	r28
 27e:	1f 91       	pop	r17
 280:	0f 91       	pop	r16
 282:	08 95       	ret

00000284 <edgeProscessing>:
volatile uint16_t g_timeHigh;
volatile uint16_t g_timePeriodAndHigh;

void edgeProscessing(void)
{
	g_edgeCounter++;
 284:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <g_edgeCounter>
 288:	8f 5f       	subi	r24, 0xFF	; 255
 28a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <g_edgeCounter>
	if (g_edgeCounter == 1)
 28e:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <g_edgeCounter>
 292:	81 30       	cpi	r24, 0x01	; 1
 294:	31 f4       	brne	.+12     	; 0x2a2 <edgeProscessing+0x1e>
	{
		ICU_clearTimer();
 296:	0e 94 9e 00 	call	0x13c	; 0x13c <ICU_clearTimer>
		ICU_setEdgeDetection(FALLING_EDGE);
 29a:	80 e0       	ldi	r24, 0x00	; 0
 29c:	0e 94 95 00 	call	0x12a	; 0x12a <ICU_setEdgeDetection>
 2a0:	08 95       	ret
	}
	else if (g_edgeCounter == 2)
 2a2:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <g_edgeCounter>
 2a6:	82 30       	cpi	r24, 0x02	; 2
 2a8:	51 f4       	brne	.+20     	; 0x2be <edgeProscessing+0x3a>
	{
		g_timeHigh = ICU_getValue();
 2aa:	0e 94 a1 00 	call	0x142	; 0x142 <ICU_getValue>
 2ae:	90 93 70 00 	sts	0x0070, r25	; 0x800070 <g_timeHigh+0x1>
 2b2:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <g_timeHigh>
		ICU_setEdgeDetection(RISING_EDGE);
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	0e 94 95 00 	call	0x12a	; 0x12a <ICU_setEdgeDetection>
 2bc:	08 95       	ret
	}
	else if (g_edgeCounter == 3)
 2be:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <g_edgeCounter>
 2c2:	83 30       	cpi	r24, 0x03	; 3
 2c4:	21 f4       	brne	.+8      	; 0x2ce <edgeProscessing+0x4a>
	{
		ICU_setEdgeDetection(FALLING_EDGE);
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	0e 94 95 00 	call	0x12a	; 0x12a <ICU_setEdgeDetection>
 2cc:	08 95       	ret
	}
	else if (g_edgeCounter == 4)
 2ce:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <g_edgeCounter>
 2d2:	84 30       	cpi	r24, 0x04	; 4
 2d4:	49 f4       	brne	.+18     	; 0x2e8 <edgeProscessing+0x64>
	{
		g_timePeriodAndHigh = ICU_getValue();
 2d6:	0e 94 a1 00 	call	0x142	; 0x142 <ICU_getValue>
 2da:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <g_timePeriodAndHigh+0x1>
 2de:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <g_timePeriodAndHigh>
		ICU_setEdgeDetection(RISING_EDGE);
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	0e 94 95 00 	call	0x12a	; 0x12a <ICU_setEdgeDetection>
 2e8:	08 95       	ret

000002ea <main>:
	}
}

int main(void)
{
 2ea:	cf 93       	push	r28
 2ec:	df 93       	push	r29
 2ee:	00 d0       	rcall	.+0      	; 0x2f0 <main+0x6>
 2f0:	cd b7       	in	r28, 0x3d	; 61
 2f2:	de b7       	in	r29, 0x3e	; 62
	/* Replace with your application code */
	
	SREG |= (1<<7); // Enable Golabl interrupts
 2f4:	8f b7       	in	r24, 0x3f	; 63
 2f6:	80 68       	ori	r24, 0x80	; 128
 2f8:	8f bf       	out	0x3f, r24	; 63
	
	LCD_init();
 2fa:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCD_init>
	
	ICU_ConfigType configType = {F_CPU_CLOCK_1,RISING_EDGE};
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	89 83       	std	Y+1, r24	; 0x01
 302:	8a 83       	std	Y+2, r24	; 0x02
	
	ICU_setCallBack(edgeProscessing);
 304:	82 e4       	ldi	r24, 0x42	; 66
 306:	91 e0       	ldi	r25, 0x01	; 1
 308:	0e 94 90 00 	call	0x120	; 0x120 <ICU_setCallBack>
	
	ICU_init(&configType);
 30c:	ce 01       	movw	r24, r28
 30e:	01 96       	adiw	r24, 0x01	; 1
 310:	0e 94 72 00 	call	0xe4	; 0xe4 <ICU_init>
	
	LCD_displayString("Freq :");
 314:	83 e6       	ldi	r24, 0x63	; 99
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	0e 94 09 01 	call	0x212	; 0x212 <LCD_displayString>
	uint16_t frequncy;
	
	
	while (1)
	{
		if (g_edgeCounter == 4)
 31c:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <g_edgeCounter>
 320:	84 30       	cpi	r24, 0x04	; 4
 322:	e1 f7       	brne	.-8      	; 0x31c <main+0x32>
		{
			g_edgeCounter = 0;
 324:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <g_edgeCounter>
			ICU_deinit();
 328:	0e 94 a4 00 	call	0x148	; 0x148 <ICU_deinit>
			frequncy = (1000000)/(g_timePeriodAndHigh - g_timeHigh) ;
 32c:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <g_timePeriodAndHigh>
 330:	30 91 6d 00 	lds	r19, 0x006D	; 0x80006d <g_timePeriodAndHigh+0x1>
 334:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <g_timeHigh>
 338:	90 91 70 00 	lds	r25, 0x0070	; 0x800070 <g_timeHigh+0x1>
 33c:	28 1b       	sub	r18, r24
 33e:	39 0b       	sbc	r19, r25
 340:	40 e0       	ldi	r20, 0x00	; 0
 342:	50 e0       	ldi	r21, 0x00	; 0
 344:	60 e4       	ldi	r22, 0x40	; 64
 346:	72 e4       	ldi	r23, 0x42	; 66
 348:	8f e0       	ldi	r24, 0x0F	; 15
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	0e 94 af 01 	call	0x35e	; 0x35e <__divmodsi4>
			LCD_integrToString(frequncy);
 350:	ca 01       	movw	r24, r20
 352:	b9 01       	movw	r22, r18
 354:	88 27       	eor	r24, r24
 356:	99 27       	eor	r25, r25
 358:	0e 94 16 01 	call	0x22c	; 0x22c <LCD_integrToString>
 35c:	df cf       	rjmp	.-66     	; 0x31c <main+0x32>

0000035e <__divmodsi4>:
 35e:	05 2e       	mov	r0, r21
 360:	97 fb       	bst	r25, 7
 362:	1e f4       	brtc	.+6      	; 0x36a <__divmodsi4+0xc>
 364:	00 94       	com	r0
 366:	0e 94 c6 01 	call	0x38c	; 0x38c <__negsi2>
 36a:	57 fd       	sbrc	r21, 7
 36c:	07 d0       	rcall	.+14     	; 0x37c <__divmodsi4_neg2>
 36e:	0e 94 ce 01 	call	0x39c	; 0x39c <__udivmodsi4>
 372:	07 fc       	sbrc	r0, 7
 374:	03 d0       	rcall	.+6      	; 0x37c <__divmodsi4_neg2>
 376:	4e f4       	brtc	.+18     	; 0x38a <__divmodsi4_exit>
 378:	0c 94 c6 01 	jmp	0x38c	; 0x38c <__negsi2>

0000037c <__divmodsi4_neg2>:
 37c:	50 95       	com	r21
 37e:	40 95       	com	r20
 380:	30 95       	com	r19
 382:	21 95       	neg	r18
 384:	3f 4f       	sbci	r19, 0xFF	; 255
 386:	4f 4f       	sbci	r20, 0xFF	; 255
 388:	5f 4f       	sbci	r21, 0xFF	; 255

0000038a <__divmodsi4_exit>:
 38a:	08 95       	ret

0000038c <__negsi2>:
 38c:	90 95       	com	r25
 38e:	80 95       	com	r24
 390:	70 95       	com	r23
 392:	61 95       	neg	r22
 394:	7f 4f       	sbci	r23, 0xFF	; 255
 396:	8f 4f       	sbci	r24, 0xFF	; 255
 398:	9f 4f       	sbci	r25, 0xFF	; 255
 39a:	08 95       	ret

0000039c <__udivmodsi4>:
 39c:	a1 e2       	ldi	r26, 0x21	; 33
 39e:	1a 2e       	mov	r1, r26
 3a0:	aa 1b       	sub	r26, r26
 3a2:	bb 1b       	sub	r27, r27
 3a4:	fd 01       	movw	r30, r26
 3a6:	0d c0       	rjmp	.+26     	; 0x3c2 <__udivmodsi4_ep>

000003a8 <__udivmodsi4_loop>:
 3a8:	aa 1f       	adc	r26, r26
 3aa:	bb 1f       	adc	r27, r27
 3ac:	ee 1f       	adc	r30, r30
 3ae:	ff 1f       	adc	r31, r31
 3b0:	a2 17       	cp	r26, r18
 3b2:	b3 07       	cpc	r27, r19
 3b4:	e4 07       	cpc	r30, r20
 3b6:	f5 07       	cpc	r31, r21
 3b8:	20 f0       	brcs	.+8      	; 0x3c2 <__udivmodsi4_ep>
 3ba:	a2 1b       	sub	r26, r18
 3bc:	b3 0b       	sbc	r27, r19
 3be:	e4 0b       	sbc	r30, r20
 3c0:	f5 0b       	sbc	r31, r21

000003c2 <__udivmodsi4_ep>:
 3c2:	66 1f       	adc	r22, r22
 3c4:	77 1f       	adc	r23, r23
 3c6:	88 1f       	adc	r24, r24
 3c8:	99 1f       	adc	r25, r25
 3ca:	1a 94       	dec	r1
 3cc:	69 f7       	brne	.-38     	; 0x3a8 <__udivmodsi4_loop>
 3ce:	60 95       	com	r22
 3d0:	70 95       	com	r23
 3d2:	80 95       	com	r24
 3d4:	90 95       	com	r25
 3d6:	9b 01       	movw	r18, r22
 3d8:	ac 01       	movw	r20, r24
 3da:	bd 01       	movw	r22, r26
 3dc:	cf 01       	movw	r24, r30
 3de:	08 95       	ret

000003e0 <sprintf>:
 3e0:	ae e0       	ldi	r26, 0x0E	; 14
 3e2:	b0 e0       	ldi	r27, 0x00	; 0
 3e4:	e6 ef       	ldi	r30, 0xF6	; 246
 3e6:	f1 e0       	ldi	r31, 0x01	; 1
 3e8:	0c 94 b1 04 	jmp	0x962	; 0x962 <__prologue_saves__+0x1c>
 3ec:	0d 89       	ldd	r16, Y+21	; 0x15
 3ee:	1e 89       	ldd	r17, Y+22	; 0x16
 3f0:	86 e0       	ldi	r24, 0x06	; 6
 3f2:	8c 83       	std	Y+4, r24	; 0x04
 3f4:	1a 83       	std	Y+2, r17	; 0x02
 3f6:	09 83       	std	Y+1, r16	; 0x01
 3f8:	8f ef       	ldi	r24, 0xFF	; 255
 3fa:	9f e7       	ldi	r25, 0x7F	; 127
 3fc:	9e 83       	std	Y+6, r25	; 0x06
 3fe:	8d 83       	std	Y+5, r24	; 0x05
 400:	ae 01       	movw	r20, r28
 402:	47 5e       	subi	r20, 0xE7	; 231
 404:	5f 4f       	sbci	r21, 0xFF	; 255
 406:	6f 89       	ldd	r22, Y+23	; 0x17
 408:	78 8d       	ldd	r23, Y+24	; 0x18
 40a:	ce 01       	movw	r24, r28
 40c:	01 96       	adiw	r24, 0x01	; 1
 40e:	0e 94 12 02 	call	0x424	; 0x424 <vfprintf>
 412:	ef 81       	ldd	r30, Y+7	; 0x07
 414:	f8 85       	ldd	r31, Y+8	; 0x08
 416:	e0 0f       	add	r30, r16
 418:	f1 1f       	adc	r31, r17
 41a:	10 82       	st	Z, r1
 41c:	2e 96       	adiw	r28, 0x0e	; 14
 41e:	e4 e0       	ldi	r30, 0x04	; 4
 420:	0c 94 cd 04 	jmp	0x99a	; 0x99a <__epilogue_restores__+0x1c>

00000424 <vfprintf>:
 424:	ab e0       	ldi	r26, 0x0B	; 11
 426:	b0 e0       	ldi	r27, 0x00	; 0
 428:	e8 e1       	ldi	r30, 0x18	; 24
 42a:	f2 e0       	ldi	r31, 0x02	; 2
 42c:	0c 94 a3 04 	jmp	0x946	; 0x946 <__prologue_saves__>
 430:	6c 01       	movw	r12, r24
 432:	7b 01       	movw	r14, r22
 434:	8a 01       	movw	r16, r20
 436:	fc 01       	movw	r30, r24
 438:	17 82       	std	Z+7, r1	; 0x07
 43a:	16 82       	std	Z+6, r1	; 0x06
 43c:	83 81       	ldd	r24, Z+3	; 0x03
 43e:	81 ff       	sbrs	r24, 1
 440:	cc c1       	rjmp	.+920    	; 0x7da <__stack+0x37b>
 442:	ce 01       	movw	r24, r28
 444:	01 96       	adiw	r24, 0x01	; 1
 446:	3c 01       	movw	r6, r24
 448:	f6 01       	movw	r30, r12
 44a:	93 81       	ldd	r25, Z+3	; 0x03
 44c:	f7 01       	movw	r30, r14
 44e:	93 fd       	sbrc	r25, 3
 450:	85 91       	lpm	r24, Z+
 452:	93 ff       	sbrs	r25, 3
 454:	81 91       	ld	r24, Z+
 456:	7f 01       	movw	r14, r30
 458:	88 23       	and	r24, r24
 45a:	09 f4       	brne	.+2      	; 0x45e <vfprintf+0x3a>
 45c:	ba c1       	rjmp	.+884    	; 0x7d2 <__stack+0x373>
 45e:	85 32       	cpi	r24, 0x25	; 37
 460:	39 f4       	brne	.+14     	; 0x470 <__stack+0x11>
 462:	93 fd       	sbrc	r25, 3
 464:	85 91       	lpm	r24, Z+
 466:	93 ff       	sbrs	r25, 3
 468:	81 91       	ld	r24, Z+
 46a:	7f 01       	movw	r14, r30
 46c:	85 32       	cpi	r24, 0x25	; 37
 46e:	29 f4       	brne	.+10     	; 0x47a <__stack+0x1b>
 470:	b6 01       	movw	r22, r12
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	0e 94 09 04 	call	0x812	; 0x812 <fputc>
 478:	e7 cf       	rjmp	.-50     	; 0x448 <vfprintf+0x24>
 47a:	91 2c       	mov	r9, r1
 47c:	21 2c       	mov	r2, r1
 47e:	31 2c       	mov	r3, r1
 480:	ff e1       	ldi	r31, 0x1F	; 31
 482:	f3 15       	cp	r31, r3
 484:	d8 f0       	brcs	.+54     	; 0x4bc <__stack+0x5d>
 486:	8b 32       	cpi	r24, 0x2B	; 43
 488:	79 f0       	breq	.+30     	; 0x4a8 <__stack+0x49>
 48a:	38 f4       	brcc	.+14     	; 0x49a <__stack+0x3b>
 48c:	80 32       	cpi	r24, 0x20	; 32
 48e:	79 f0       	breq	.+30     	; 0x4ae <__stack+0x4f>
 490:	83 32       	cpi	r24, 0x23	; 35
 492:	a1 f4       	brne	.+40     	; 0x4bc <__stack+0x5d>
 494:	23 2d       	mov	r18, r3
 496:	20 61       	ori	r18, 0x10	; 16
 498:	1d c0       	rjmp	.+58     	; 0x4d4 <__stack+0x75>
 49a:	8d 32       	cpi	r24, 0x2D	; 45
 49c:	61 f0       	breq	.+24     	; 0x4b6 <__stack+0x57>
 49e:	80 33       	cpi	r24, 0x30	; 48
 4a0:	69 f4       	brne	.+26     	; 0x4bc <__stack+0x5d>
 4a2:	23 2d       	mov	r18, r3
 4a4:	21 60       	ori	r18, 0x01	; 1
 4a6:	16 c0       	rjmp	.+44     	; 0x4d4 <__stack+0x75>
 4a8:	83 2d       	mov	r24, r3
 4aa:	82 60       	ori	r24, 0x02	; 2
 4ac:	38 2e       	mov	r3, r24
 4ae:	e3 2d       	mov	r30, r3
 4b0:	e4 60       	ori	r30, 0x04	; 4
 4b2:	3e 2e       	mov	r3, r30
 4b4:	2a c0       	rjmp	.+84     	; 0x50a <__stack+0xab>
 4b6:	f3 2d       	mov	r31, r3
 4b8:	f8 60       	ori	r31, 0x08	; 8
 4ba:	1d c0       	rjmp	.+58     	; 0x4f6 <__stack+0x97>
 4bc:	37 fc       	sbrc	r3, 7
 4be:	2d c0       	rjmp	.+90     	; 0x51a <__stack+0xbb>
 4c0:	20 ed       	ldi	r18, 0xD0	; 208
 4c2:	28 0f       	add	r18, r24
 4c4:	2a 30       	cpi	r18, 0x0A	; 10
 4c6:	40 f0       	brcs	.+16     	; 0x4d8 <__stack+0x79>
 4c8:	8e 32       	cpi	r24, 0x2E	; 46
 4ca:	b9 f4       	brne	.+46     	; 0x4fa <__stack+0x9b>
 4cc:	36 fc       	sbrc	r3, 6
 4ce:	81 c1       	rjmp	.+770    	; 0x7d2 <__stack+0x373>
 4d0:	23 2d       	mov	r18, r3
 4d2:	20 64       	ori	r18, 0x40	; 64
 4d4:	32 2e       	mov	r3, r18
 4d6:	19 c0       	rjmp	.+50     	; 0x50a <__stack+0xab>
 4d8:	36 fe       	sbrs	r3, 6
 4da:	06 c0       	rjmp	.+12     	; 0x4e8 <__stack+0x89>
 4dc:	8a e0       	ldi	r24, 0x0A	; 10
 4de:	98 9e       	mul	r9, r24
 4e0:	20 0d       	add	r18, r0
 4e2:	11 24       	eor	r1, r1
 4e4:	92 2e       	mov	r9, r18
 4e6:	11 c0       	rjmp	.+34     	; 0x50a <__stack+0xab>
 4e8:	ea e0       	ldi	r30, 0x0A	; 10
 4ea:	2e 9e       	mul	r2, r30
 4ec:	20 0d       	add	r18, r0
 4ee:	11 24       	eor	r1, r1
 4f0:	22 2e       	mov	r2, r18
 4f2:	f3 2d       	mov	r31, r3
 4f4:	f0 62       	ori	r31, 0x20	; 32
 4f6:	3f 2e       	mov	r3, r31
 4f8:	08 c0       	rjmp	.+16     	; 0x50a <__stack+0xab>
 4fa:	8c 36       	cpi	r24, 0x6C	; 108
 4fc:	21 f4       	brne	.+8      	; 0x506 <__stack+0xa7>
 4fe:	83 2d       	mov	r24, r3
 500:	80 68       	ori	r24, 0x80	; 128
 502:	38 2e       	mov	r3, r24
 504:	02 c0       	rjmp	.+4      	; 0x50a <__stack+0xab>
 506:	88 36       	cpi	r24, 0x68	; 104
 508:	41 f4       	brne	.+16     	; 0x51a <__stack+0xbb>
 50a:	f7 01       	movw	r30, r14
 50c:	93 fd       	sbrc	r25, 3
 50e:	85 91       	lpm	r24, Z+
 510:	93 ff       	sbrs	r25, 3
 512:	81 91       	ld	r24, Z+
 514:	7f 01       	movw	r14, r30
 516:	81 11       	cpse	r24, r1
 518:	b3 cf       	rjmp	.-154    	; 0x480 <__stack+0x21>
 51a:	98 2f       	mov	r25, r24
 51c:	9f 7d       	andi	r25, 0xDF	; 223
 51e:	95 54       	subi	r25, 0x45	; 69
 520:	93 30       	cpi	r25, 0x03	; 3
 522:	28 f4       	brcc	.+10     	; 0x52e <__stack+0xcf>
 524:	0c 5f       	subi	r16, 0xFC	; 252
 526:	1f 4f       	sbci	r17, 0xFF	; 255
 528:	9f e3       	ldi	r25, 0x3F	; 63
 52a:	99 83       	std	Y+1, r25	; 0x01
 52c:	0d c0       	rjmp	.+26     	; 0x548 <__stack+0xe9>
 52e:	83 36       	cpi	r24, 0x63	; 99
 530:	31 f0       	breq	.+12     	; 0x53e <__stack+0xdf>
 532:	83 37       	cpi	r24, 0x73	; 115
 534:	71 f0       	breq	.+28     	; 0x552 <__stack+0xf3>
 536:	83 35       	cpi	r24, 0x53	; 83
 538:	09 f0       	breq	.+2      	; 0x53c <__stack+0xdd>
 53a:	59 c0       	rjmp	.+178    	; 0x5ee <__stack+0x18f>
 53c:	21 c0       	rjmp	.+66     	; 0x580 <__stack+0x121>
 53e:	f8 01       	movw	r30, r16
 540:	80 81       	ld	r24, Z
 542:	89 83       	std	Y+1, r24	; 0x01
 544:	0e 5f       	subi	r16, 0xFE	; 254
 546:	1f 4f       	sbci	r17, 0xFF	; 255
 548:	88 24       	eor	r8, r8
 54a:	83 94       	inc	r8
 54c:	91 2c       	mov	r9, r1
 54e:	53 01       	movw	r10, r6
 550:	13 c0       	rjmp	.+38     	; 0x578 <__stack+0x119>
 552:	28 01       	movw	r4, r16
 554:	f2 e0       	ldi	r31, 0x02	; 2
 556:	4f 0e       	add	r4, r31
 558:	51 1c       	adc	r5, r1
 55a:	f8 01       	movw	r30, r16
 55c:	a0 80       	ld	r10, Z
 55e:	b1 80       	ldd	r11, Z+1	; 0x01
 560:	36 fe       	sbrs	r3, 6
 562:	03 c0       	rjmp	.+6      	; 0x56a <__stack+0x10b>
 564:	69 2d       	mov	r22, r9
 566:	70 e0       	ldi	r23, 0x00	; 0
 568:	02 c0       	rjmp	.+4      	; 0x56e <__stack+0x10f>
 56a:	6f ef       	ldi	r22, 0xFF	; 255
 56c:	7f ef       	ldi	r23, 0xFF	; 255
 56e:	c5 01       	movw	r24, r10
 570:	0e 94 fe 03 	call	0x7fc	; 0x7fc <strnlen>
 574:	4c 01       	movw	r8, r24
 576:	82 01       	movw	r16, r4
 578:	f3 2d       	mov	r31, r3
 57a:	ff 77       	andi	r31, 0x7F	; 127
 57c:	3f 2e       	mov	r3, r31
 57e:	16 c0       	rjmp	.+44     	; 0x5ac <__stack+0x14d>
 580:	28 01       	movw	r4, r16
 582:	22 e0       	ldi	r18, 0x02	; 2
 584:	42 0e       	add	r4, r18
 586:	51 1c       	adc	r5, r1
 588:	f8 01       	movw	r30, r16
 58a:	a0 80       	ld	r10, Z
 58c:	b1 80       	ldd	r11, Z+1	; 0x01
 58e:	36 fe       	sbrs	r3, 6
 590:	03 c0       	rjmp	.+6      	; 0x598 <__stack+0x139>
 592:	69 2d       	mov	r22, r9
 594:	70 e0       	ldi	r23, 0x00	; 0
 596:	02 c0       	rjmp	.+4      	; 0x59c <__stack+0x13d>
 598:	6f ef       	ldi	r22, 0xFF	; 255
 59a:	7f ef       	ldi	r23, 0xFF	; 255
 59c:	c5 01       	movw	r24, r10
 59e:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <strnlen_P>
 5a2:	4c 01       	movw	r8, r24
 5a4:	f3 2d       	mov	r31, r3
 5a6:	f0 68       	ori	r31, 0x80	; 128
 5a8:	3f 2e       	mov	r3, r31
 5aa:	82 01       	movw	r16, r4
 5ac:	33 fc       	sbrc	r3, 3
 5ae:	1b c0       	rjmp	.+54     	; 0x5e6 <__stack+0x187>
 5b0:	82 2d       	mov	r24, r2
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	88 16       	cp	r8, r24
 5b6:	99 06       	cpc	r9, r25
 5b8:	b0 f4       	brcc	.+44     	; 0x5e6 <__stack+0x187>
 5ba:	b6 01       	movw	r22, r12
 5bc:	80 e2       	ldi	r24, 0x20	; 32
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	0e 94 09 04 	call	0x812	; 0x812 <fputc>
 5c4:	2a 94       	dec	r2
 5c6:	f4 cf       	rjmp	.-24     	; 0x5b0 <__stack+0x151>
 5c8:	f5 01       	movw	r30, r10
 5ca:	37 fc       	sbrc	r3, 7
 5cc:	85 91       	lpm	r24, Z+
 5ce:	37 fe       	sbrs	r3, 7
 5d0:	81 91       	ld	r24, Z+
 5d2:	5f 01       	movw	r10, r30
 5d4:	b6 01       	movw	r22, r12
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	0e 94 09 04 	call	0x812	; 0x812 <fputc>
 5dc:	21 10       	cpse	r2, r1
 5de:	2a 94       	dec	r2
 5e0:	21 e0       	ldi	r18, 0x01	; 1
 5e2:	82 1a       	sub	r8, r18
 5e4:	91 08       	sbc	r9, r1
 5e6:	81 14       	cp	r8, r1
 5e8:	91 04       	cpc	r9, r1
 5ea:	71 f7       	brne	.-36     	; 0x5c8 <__stack+0x169>
 5ec:	e8 c0       	rjmp	.+464    	; 0x7be <__stack+0x35f>
 5ee:	84 36       	cpi	r24, 0x64	; 100
 5f0:	11 f0       	breq	.+4      	; 0x5f6 <__stack+0x197>
 5f2:	89 36       	cpi	r24, 0x69	; 105
 5f4:	41 f5       	brne	.+80     	; 0x646 <__stack+0x1e7>
 5f6:	f8 01       	movw	r30, r16
 5f8:	37 fe       	sbrs	r3, 7
 5fa:	07 c0       	rjmp	.+14     	; 0x60a <__stack+0x1ab>
 5fc:	60 81       	ld	r22, Z
 5fe:	71 81       	ldd	r23, Z+1	; 0x01
 600:	82 81       	ldd	r24, Z+2	; 0x02
 602:	93 81       	ldd	r25, Z+3	; 0x03
 604:	0c 5f       	subi	r16, 0xFC	; 252
 606:	1f 4f       	sbci	r17, 0xFF	; 255
 608:	08 c0       	rjmp	.+16     	; 0x61a <__stack+0x1bb>
 60a:	60 81       	ld	r22, Z
 60c:	71 81       	ldd	r23, Z+1	; 0x01
 60e:	07 2e       	mov	r0, r23
 610:	00 0c       	add	r0, r0
 612:	88 0b       	sbc	r24, r24
 614:	99 0b       	sbc	r25, r25
 616:	0e 5f       	subi	r16, 0xFE	; 254
 618:	1f 4f       	sbci	r17, 0xFF	; 255
 61a:	f3 2d       	mov	r31, r3
 61c:	ff 76       	andi	r31, 0x6F	; 111
 61e:	3f 2e       	mov	r3, r31
 620:	97 ff       	sbrs	r25, 7
 622:	09 c0       	rjmp	.+18     	; 0x636 <__stack+0x1d7>
 624:	90 95       	com	r25
 626:	80 95       	com	r24
 628:	70 95       	com	r23
 62a:	61 95       	neg	r22
 62c:	7f 4f       	sbci	r23, 0xFF	; 255
 62e:	8f 4f       	sbci	r24, 0xFF	; 255
 630:	9f 4f       	sbci	r25, 0xFF	; 255
 632:	f0 68       	ori	r31, 0x80	; 128
 634:	3f 2e       	mov	r3, r31
 636:	2a e0       	ldi	r18, 0x0A	; 10
 638:	30 e0       	ldi	r19, 0x00	; 0
 63a:	a3 01       	movw	r20, r6
 63c:	0e 94 45 04 	call	0x88a	; 0x88a <__ultoa_invert>
 640:	88 2e       	mov	r8, r24
 642:	86 18       	sub	r8, r6
 644:	45 c0       	rjmp	.+138    	; 0x6d0 <__stack+0x271>
 646:	85 37       	cpi	r24, 0x75	; 117
 648:	31 f4       	brne	.+12     	; 0x656 <__stack+0x1f7>
 64a:	23 2d       	mov	r18, r3
 64c:	2f 7e       	andi	r18, 0xEF	; 239
 64e:	b2 2e       	mov	r11, r18
 650:	2a e0       	ldi	r18, 0x0A	; 10
 652:	30 e0       	ldi	r19, 0x00	; 0
 654:	25 c0       	rjmp	.+74     	; 0x6a0 <__stack+0x241>
 656:	93 2d       	mov	r25, r3
 658:	99 7f       	andi	r25, 0xF9	; 249
 65a:	b9 2e       	mov	r11, r25
 65c:	8f 36       	cpi	r24, 0x6F	; 111
 65e:	c1 f0       	breq	.+48     	; 0x690 <__stack+0x231>
 660:	18 f4       	brcc	.+6      	; 0x668 <__stack+0x209>
 662:	88 35       	cpi	r24, 0x58	; 88
 664:	79 f0       	breq	.+30     	; 0x684 <__stack+0x225>
 666:	b5 c0       	rjmp	.+362    	; 0x7d2 <__stack+0x373>
 668:	80 37       	cpi	r24, 0x70	; 112
 66a:	19 f0       	breq	.+6      	; 0x672 <__stack+0x213>
 66c:	88 37       	cpi	r24, 0x78	; 120
 66e:	21 f0       	breq	.+8      	; 0x678 <__stack+0x219>
 670:	b0 c0       	rjmp	.+352    	; 0x7d2 <__stack+0x373>
 672:	e9 2f       	mov	r30, r25
 674:	e0 61       	ori	r30, 0x10	; 16
 676:	be 2e       	mov	r11, r30
 678:	b4 fe       	sbrs	r11, 4
 67a:	0d c0       	rjmp	.+26     	; 0x696 <__stack+0x237>
 67c:	fb 2d       	mov	r31, r11
 67e:	f4 60       	ori	r31, 0x04	; 4
 680:	bf 2e       	mov	r11, r31
 682:	09 c0       	rjmp	.+18     	; 0x696 <__stack+0x237>
 684:	34 fe       	sbrs	r3, 4
 686:	0a c0       	rjmp	.+20     	; 0x69c <__stack+0x23d>
 688:	29 2f       	mov	r18, r25
 68a:	26 60       	ori	r18, 0x06	; 6
 68c:	b2 2e       	mov	r11, r18
 68e:	06 c0       	rjmp	.+12     	; 0x69c <__stack+0x23d>
 690:	28 e0       	ldi	r18, 0x08	; 8
 692:	30 e0       	ldi	r19, 0x00	; 0
 694:	05 c0       	rjmp	.+10     	; 0x6a0 <__stack+0x241>
 696:	20 e1       	ldi	r18, 0x10	; 16
 698:	30 e0       	ldi	r19, 0x00	; 0
 69a:	02 c0       	rjmp	.+4      	; 0x6a0 <__stack+0x241>
 69c:	20 e1       	ldi	r18, 0x10	; 16
 69e:	32 e0       	ldi	r19, 0x02	; 2
 6a0:	f8 01       	movw	r30, r16
 6a2:	b7 fe       	sbrs	r11, 7
 6a4:	07 c0       	rjmp	.+14     	; 0x6b4 <__stack+0x255>
 6a6:	60 81       	ld	r22, Z
 6a8:	71 81       	ldd	r23, Z+1	; 0x01
 6aa:	82 81       	ldd	r24, Z+2	; 0x02
 6ac:	93 81       	ldd	r25, Z+3	; 0x03
 6ae:	0c 5f       	subi	r16, 0xFC	; 252
 6b0:	1f 4f       	sbci	r17, 0xFF	; 255
 6b2:	06 c0       	rjmp	.+12     	; 0x6c0 <__stack+0x261>
 6b4:	60 81       	ld	r22, Z
 6b6:	71 81       	ldd	r23, Z+1	; 0x01
 6b8:	80 e0       	ldi	r24, 0x00	; 0
 6ba:	90 e0       	ldi	r25, 0x00	; 0
 6bc:	0e 5f       	subi	r16, 0xFE	; 254
 6be:	1f 4f       	sbci	r17, 0xFF	; 255
 6c0:	a3 01       	movw	r20, r6
 6c2:	0e 94 45 04 	call	0x88a	; 0x88a <__ultoa_invert>
 6c6:	88 2e       	mov	r8, r24
 6c8:	86 18       	sub	r8, r6
 6ca:	fb 2d       	mov	r31, r11
 6cc:	ff 77       	andi	r31, 0x7F	; 127
 6ce:	3f 2e       	mov	r3, r31
 6d0:	36 fe       	sbrs	r3, 6
 6d2:	0d c0       	rjmp	.+26     	; 0x6ee <__stack+0x28f>
 6d4:	23 2d       	mov	r18, r3
 6d6:	2e 7f       	andi	r18, 0xFE	; 254
 6d8:	a2 2e       	mov	r10, r18
 6da:	89 14       	cp	r8, r9
 6dc:	58 f4       	brcc	.+22     	; 0x6f4 <__stack+0x295>
 6de:	34 fe       	sbrs	r3, 4
 6e0:	0b c0       	rjmp	.+22     	; 0x6f8 <__stack+0x299>
 6e2:	32 fc       	sbrc	r3, 2
 6e4:	09 c0       	rjmp	.+18     	; 0x6f8 <__stack+0x299>
 6e6:	83 2d       	mov	r24, r3
 6e8:	8e 7e       	andi	r24, 0xEE	; 238
 6ea:	a8 2e       	mov	r10, r24
 6ec:	05 c0       	rjmp	.+10     	; 0x6f8 <__stack+0x299>
 6ee:	b8 2c       	mov	r11, r8
 6f0:	a3 2c       	mov	r10, r3
 6f2:	03 c0       	rjmp	.+6      	; 0x6fa <__stack+0x29b>
 6f4:	b8 2c       	mov	r11, r8
 6f6:	01 c0       	rjmp	.+2      	; 0x6fa <__stack+0x29b>
 6f8:	b9 2c       	mov	r11, r9
 6fa:	a4 fe       	sbrs	r10, 4
 6fc:	0f c0       	rjmp	.+30     	; 0x71c <__stack+0x2bd>
 6fe:	fe 01       	movw	r30, r28
 700:	e8 0d       	add	r30, r8
 702:	f1 1d       	adc	r31, r1
 704:	80 81       	ld	r24, Z
 706:	80 33       	cpi	r24, 0x30	; 48
 708:	21 f4       	brne	.+8      	; 0x712 <__stack+0x2b3>
 70a:	9a 2d       	mov	r25, r10
 70c:	99 7e       	andi	r25, 0xE9	; 233
 70e:	a9 2e       	mov	r10, r25
 710:	09 c0       	rjmp	.+18     	; 0x724 <__stack+0x2c5>
 712:	a2 fe       	sbrs	r10, 2
 714:	06 c0       	rjmp	.+12     	; 0x722 <__stack+0x2c3>
 716:	b3 94       	inc	r11
 718:	b3 94       	inc	r11
 71a:	04 c0       	rjmp	.+8      	; 0x724 <__stack+0x2c5>
 71c:	8a 2d       	mov	r24, r10
 71e:	86 78       	andi	r24, 0x86	; 134
 720:	09 f0       	breq	.+2      	; 0x724 <__stack+0x2c5>
 722:	b3 94       	inc	r11
 724:	a3 fc       	sbrc	r10, 3
 726:	11 c0       	rjmp	.+34     	; 0x74a <__stack+0x2eb>
 728:	a0 fe       	sbrs	r10, 0
 72a:	06 c0       	rjmp	.+12     	; 0x738 <__stack+0x2d9>
 72c:	b2 14       	cp	r11, r2
 72e:	88 f4       	brcc	.+34     	; 0x752 <__stack+0x2f3>
 730:	28 0c       	add	r2, r8
 732:	92 2c       	mov	r9, r2
 734:	9b 18       	sub	r9, r11
 736:	0e c0       	rjmp	.+28     	; 0x754 <__stack+0x2f5>
 738:	b2 14       	cp	r11, r2
 73a:	60 f4       	brcc	.+24     	; 0x754 <__stack+0x2f5>
 73c:	b6 01       	movw	r22, r12
 73e:	80 e2       	ldi	r24, 0x20	; 32
 740:	90 e0       	ldi	r25, 0x00	; 0
 742:	0e 94 09 04 	call	0x812	; 0x812 <fputc>
 746:	b3 94       	inc	r11
 748:	f7 cf       	rjmp	.-18     	; 0x738 <__stack+0x2d9>
 74a:	b2 14       	cp	r11, r2
 74c:	18 f4       	brcc	.+6      	; 0x754 <__stack+0x2f5>
 74e:	2b 18       	sub	r2, r11
 750:	02 c0       	rjmp	.+4      	; 0x756 <__stack+0x2f7>
 752:	98 2c       	mov	r9, r8
 754:	21 2c       	mov	r2, r1
 756:	a4 fe       	sbrs	r10, 4
 758:	10 c0       	rjmp	.+32     	; 0x77a <__stack+0x31b>
 75a:	b6 01       	movw	r22, r12
 75c:	80 e3       	ldi	r24, 0x30	; 48
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	0e 94 09 04 	call	0x812	; 0x812 <fputc>
 764:	a2 fe       	sbrs	r10, 2
 766:	17 c0       	rjmp	.+46     	; 0x796 <__stack+0x337>
 768:	a1 fc       	sbrc	r10, 1
 76a:	03 c0       	rjmp	.+6      	; 0x772 <__stack+0x313>
 76c:	88 e7       	ldi	r24, 0x78	; 120
 76e:	90 e0       	ldi	r25, 0x00	; 0
 770:	02 c0       	rjmp	.+4      	; 0x776 <__stack+0x317>
 772:	88 e5       	ldi	r24, 0x58	; 88
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	b6 01       	movw	r22, r12
 778:	0c c0       	rjmp	.+24     	; 0x792 <__stack+0x333>
 77a:	8a 2d       	mov	r24, r10
 77c:	86 78       	andi	r24, 0x86	; 134
 77e:	59 f0       	breq	.+22     	; 0x796 <__stack+0x337>
 780:	a1 fe       	sbrs	r10, 1
 782:	02 c0       	rjmp	.+4      	; 0x788 <__stack+0x329>
 784:	8b e2       	ldi	r24, 0x2B	; 43
 786:	01 c0       	rjmp	.+2      	; 0x78a <__stack+0x32b>
 788:	80 e2       	ldi	r24, 0x20	; 32
 78a:	a7 fc       	sbrc	r10, 7
 78c:	8d e2       	ldi	r24, 0x2D	; 45
 78e:	b6 01       	movw	r22, r12
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	0e 94 09 04 	call	0x812	; 0x812 <fputc>
 796:	89 14       	cp	r8, r9
 798:	38 f4       	brcc	.+14     	; 0x7a8 <__stack+0x349>
 79a:	b6 01       	movw	r22, r12
 79c:	80 e3       	ldi	r24, 0x30	; 48
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	0e 94 09 04 	call	0x812	; 0x812 <fputc>
 7a4:	9a 94       	dec	r9
 7a6:	f7 cf       	rjmp	.-18     	; 0x796 <__stack+0x337>
 7a8:	8a 94       	dec	r8
 7aa:	f3 01       	movw	r30, r6
 7ac:	e8 0d       	add	r30, r8
 7ae:	f1 1d       	adc	r31, r1
 7b0:	80 81       	ld	r24, Z
 7b2:	b6 01       	movw	r22, r12
 7b4:	90 e0       	ldi	r25, 0x00	; 0
 7b6:	0e 94 09 04 	call	0x812	; 0x812 <fputc>
 7ba:	81 10       	cpse	r8, r1
 7bc:	f5 cf       	rjmp	.-22     	; 0x7a8 <__stack+0x349>
 7be:	22 20       	and	r2, r2
 7c0:	09 f4       	brne	.+2      	; 0x7c4 <__stack+0x365>
 7c2:	42 ce       	rjmp	.-892    	; 0x448 <vfprintf+0x24>
 7c4:	b6 01       	movw	r22, r12
 7c6:	80 e2       	ldi	r24, 0x20	; 32
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	0e 94 09 04 	call	0x812	; 0x812 <fputc>
 7ce:	2a 94       	dec	r2
 7d0:	f6 cf       	rjmp	.-20     	; 0x7be <__stack+0x35f>
 7d2:	f6 01       	movw	r30, r12
 7d4:	86 81       	ldd	r24, Z+6	; 0x06
 7d6:	97 81       	ldd	r25, Z+7	; 0x07
 7d8:	02 c0       	rjmp	.+4      	; 0x7de <__stack+0x37f>
 7da:	8f ef       	ldi	r24, 0xFF	; 255
 7dc:	9f ef       	ldi	r25, 0xFF	; 255
 7de:	2b 96       	adiw	r28, 0x0b	; 11
 7e0:	e2 e1       	ldi	r30, 0x12	; 18
 7e2:	0c 94 bf 04 	jmp	0x97e	; 0x97e <__epilogue_restores__>

000007e6 <strnlen_P>:
 7e6:	fc 01       	movw	r30, r24
 7e8:	05 90       	lpm	r0, Z+
 7ea:	61 50       	subi	r22, 0x01	; 1
 7ec:	70 40       	sbci	r23, 0x00	; 0
 7ee:	01 10       	cpse	r0, r1
 7f0:	d8 f7       	brcc	.-10     	; 0x7e8 <strnlen_P+0x2>
 7f2:	80 95       	com	r24
 7f4:	90 95       	com	r25
 7f6:	8e 0f       	add	r24, r30
 7f8:	9f 1f       	adc	r25, r31
 7fa:	08 95       	ret

000007fc <strnlen>:
 7fc:	fc 01       	movw	r30, r24
 7fe:	61 50       	subi	r22, 0x01	; 1
 800:	70 40       	sbci	r23, 0x00	; 0
 802:	01 90       	ld	r0, Z+
 804:	01 10       	cpse	r0, r1
 806:	d8 f7       	brcc	.-10     	; 0x7fe <strnlen+0x2>
 808:	80 95       	com	r24
 80a:	90 95       	com	r25
 80c:	8e 0f       	add	r24, r30
 80e:	9f 1f       	adc	r25, r31
 810:	08 95       	ret

00000812 <fputc>:
 812:	0f 93       	push	r16
 814:	1f 93       	push	r17
 816:	cf 93       	push	r28
 818:	df 93       	push	r29
 81a:	fb 01       	movw	r30, r22
 81c:	23 81       	ldd	r18, Z+3	; 0x03
 81e:	21 fd       	sbrc	r18, 1
 820:	03 c0       	rjmp	.+6      	; 0x828 <fputc+0x16>
 822:	8f ef       	ldi	r24, 0xFF	; 255
 824:	9f ef       	ldi	r25, 0xFF	; 255
 826:	2c c0       	rjmp	.+88     	; 0x880 <fputc+0x6e>
 828:	22 ff       	sbrs	r18, 2
 82a:	16 c0       	rjmp	.+44     	; 0x858 <fputc+0x46>
 82c:	46 81       	ldd	r20, Z+6	; 0x06
 82e:	57 81       	ldd	r21, Z+7	; 0x07
 830:	24 81       	ldd	r18, Z+4	; 0x04
 832:	35 81       	ldd	r19, Z+5	; 0x05
 834:	42 17       	cp	r20, r18
 836:	53 07       	cpc	r21, r19
 838:	44 f4       	brge	.+16     	; 0x84a <fputc+0x38>
 83a:	a0 81       	ld	r26, Z
 83c:	b1 81       	ldd	r27, Z+1	; 0x01
 83e:	9d 01       	movw	r18, r26
 840:	2f 5f       	subi	r18, 0xFF	; 255
 842:	3f 4f       	sbci	r19, 0xFF	; 255
 844:	31 83       	std	Z+1, r19	; 0x01
 846:	20 83       	st	Z, r18
 848:	8c 93       	st	X, r24
 84a:	26 81       	ldd	r18, Z+6	; 0x06
 84c:	37 81       	ldd	r19, Z+7	; 0x07
 84e:	2f 5f       	subi	r18, 0xFF	; 255
 850:	3f 4f       	sbci	r19, 0xFF	; 255
 852:	37 83       	std	Z+7, r19	; 0x07
 854:	26 83       	std	Z+6, r18	; 0x06
 856:	14 c0       	rjmp	.+40     	; 0x880 <fputc+0x6e>
 858:	8b 01       	movw	r16, r22
 85a:	ec 01       	movw	r28, r24
 85c:	fb 01       	movw	r30, r22
 85e:	00 84       	ldd	r0, Z+8	; 0x08
 860:	f1 85       	ldd	r31, Z+9	; 0x09
 862:	e0 2d       	mov	r30, r0
 864:	09 95       	icall
 866:	89 2b       	or	r24, r25
 868:	e1 f6       	brne	.-72     	; 0x822 <fputc+0x10>
 86a:	d8 01       	movw	r26, r16
 86c:	16 96       	adiw	r26, 0x06	; 6
 86e:	8d 91       	ld	r24, X+
 870:	9c 91       	ld	r25, X
 872:	17 97       	sbiw	r26, 0x07	; 7
 874:	01 96       	adiw	r24, 0x01	; 1
 876:	17 96       	adiw	r26, 0x07	; 7
 878:	9c 93       	st	X, r25
 87a:	8e 93       	st	-X, r24
 87c:	16 97       	sbiw	r26, 0x06	; 6
 87e:	ce 01       	movw	r24, r28
 880:	df 91       	pop	r29
 882:	cf 91       	pop	r28
 884:	1f 91       	pop	r17
 886:	0f 91       	pop	r16
 888:	08 95       	ret

0000088a <__ultoa_invert>:
 88a:	fa 01       	movw	r30, r20
 88c:	aa 27       	eor	r26, r26
 88e:	28 30       	cpi	r18, 0x08	; 8
 890:	51 f1       	breq	.+84     	; 0x8e6 <__ultoa_invert+0x5c>
 892:	20 31       	cpi	r18, 0x10	; 16
 894:	81 f1       	breq	.+96     	; 0x8f6 <__ultoa_invert+0x6c>
 896:	e8 94       	clt
 898:	6f 93       	push	r22
 89a:	6e 7f       	andi	r22, 0xFE	; 254
 89c:	6e 5f       	subi	r22, 0xFE	; 254
 89e:	7f 4f       	sbci	r23, 0xFF	; 255
 8a0:	8f 4f       	sbci	r24, 0xFF	; 255
 8a2:	9f 4f       	sbci	r25, 0xFF	; 255
 8a4:	af 4f       	sbci	r26, 0xFF	; 255
 8a6:	b1 e0       	ldi	r27, 0x01	; 1
 8a8:	3e d0       	rcall	.+124    	; 0x926 <__ultoa_invert+0x9c>
 8aa:	b4 e0       	ldi	r27, 0x04	; 4
 8ac:	3c d0       	rcall	.+120    	; 0x926 <__ultoa_invert+0x9c>
 8ae:	67 0f       	add	r22, r23
 8b0:	78 1f       	adc	r23, r24
 8b2:	89 1f       	adc	r24, r25
 8b4:	9a 1f       	adc	r25, r26
 8b6:	a1 1d       	adc	r26, r1
 8b8:	68 0f       	add	r22, r24
 8ba:	79 1f       	adc	r23, r25
 8bc:	8a 1f       	adc	r24, r26
 8be:	91 1d       	adc	r25, r1
 8c0:	a1 1d       	adc	r26, r1
 8c2:	6a 0f       	add	r22, r26
 8c4:	71 1d       	adc	r23, r1
 8c6:	81 1d       	adc	r24, r1
 8c8:	91 1d       	adc	r25, r1
 8ca:	a1 1d       	adc	r26, r1
 8cc:	20 d0       	rcall	.+64     	; 0x90e <__ultoa_invert+0x84>
 8ce:	09 f4       	brne	.+2      	; 0x8d2 <__ultoa_invert+0x48>
 8d0:	68 94       	set
 8d2:	3f 91       	pop	r19
 8d4:	2a e0       	ldi	r18, 0x0A	; 10
 8d6:	26 9f       	mul	r18, r22
 8d8:	11 24       	eor	r1, r1
 8da:	30 19       	sub	r19, r0
 8dc:	30 5d       	subi	r19, 0xD0	; 208
 8de:	31 93       	st	Z+, r19
 8e0:	de f6       	brtc	.-74     	; 0x898 <__ultoa_invert+0xe>
 8e2:	cf 01       	movw	r24, r30
 8e4:	08 95       	ret
 8e6:	46 2f       	mov	r20, r22
 8e8:	47 70       	andi	r20, 0x07	; 7
 8ea:	40 5d       	subi	r20, 0xD0	; 208
 8ec:	41 93       	st	Z+, r20
 8ee:	b3 e0       	ldi	r27, 0x03	; 3
 8f0:	0f d0       	rcall	.+30     	; 0x910 <__ultoa_invert+0x86>
 8f2:	c9 f7       	brne	.-14     	; 0x8e6 <__ultoa_invert+0x5c>
 8f4:	f6 cf       	rjmp	.-20     	; 0x8e2 <__ultoa_invert+0x58>
 8f6:	46 2f       	mov	r20, r22
 8f8:	4f 70       	andi	r20, 0x0F	; 15
 8fa:	40 5d       	subi	r20, 0xD0	; 208
 8fc:	4a 33       	cpi	r20, 0x3A	; 58
 8fe:	18 f0       	brcs	.+6      	; 0x906 <__ultoa_invert+0x7c>
 900:	49 5d       	subi	r20, 0xD9	; 217
 902:	31 fd       	sbrc	r19, 1
 904:	40 52       	subi	r20, 0x20	; 32
 906:	41 93       	st	Z+, r20
 908:	02 d0       	rcall	.+4      	; 0x90e <__ultoa_invert+0x84>
 90a:	a9 f7       	brne	.-22     	; 0x8f6 <__ultoa_invert+0x6c>
 90c:	ea cf       	rjmp	.-44     	; 0x8e2 <__ultoa_invert+0x58>
 90e:	b4 e0       	ldi	r27, 0x04	; 4
 910:	a6 95       	lsr	r26
 912:	97 95       	ror	r25
 914:	87 95       	ror	r24
 916:	77 95       	ror	r23
 918:	67 95       	ror	r22
 91a:	ba 95       	dec	r27
 91c:	c9 f7       	brne	.-14     	; 0x910 <__ultoa_invert+0x86>
 91e:	00 97       	sbiw	r24, 0x00	; 0
 920:	61 05       	cpc	r22, r1
 922:	71 05       	cpc	r23, r1
 924:	08 95       	ret
 926:	9b 01       	movw	r18, r22
 928:	ac 01       	movw	r20, r24
 92a:	0a 2e       	mov	r0, r26
 92c:	06 94       	lsr	r0
 92e:	57 95       	ror	r21
 930:	47 95       	ror	r20
 932:	37 95       	ror	r19
 934:	27 95       	ror	r18
 936:	ba 95       	dec	r27
 938:	c9 f7       	brne	.-14     	; 0x92c <__ultoa_invert+0xa2>
 93a:	62 0f       	add	r22, r18
 93c:	73 1f       	adc	r23, r19
 93e:	84 1f       	adc	r24, r20
 940:	95 1f       	adc	r25, r21
 942:	a0 1d       	adc	r26, r0
 944:	08 95       	ret

00000946 <__prologue_saves__>:
 946:	2f 92       	push	r2
 948:	3f 92       	push	r3
 94a:	4f 92       	push	r4
 94c:	5f 92       	push	r5
 94e:	6f 92       	push	r6
 950:	7f 92       	push	r7
 952:	8f 92       	push	r8
 954:	9f 92       	push	r9
 956:	af 92       	push	r10
 958:	bf 92       	push	r11
 95a:	cf 92       	push	r12
 95c:	df 92       	push	r13
 95e:	ef 92       	push	r14
 960:	ff 92       	push	r15
 962:	0f 93       	push	r16
 964:	1f 93       	push	r17
 966:	cf 93       	push	r28
 968:	df 93       	push	r29
 96a:	cd b7       	in	r28, 0x3d	; 61
 96c:	de b7       	in	r29, 0x3e	; 62
 96e:	ca 1b       	sub	r28, r26
 970:	db 0b       	sbc	r29, r27
 972:	0f b6       	in	r0, 0x3f	; 63
 974:	f8 94       	cli
 976:	de bf       	out	0x3e, r29	; 62
 978:	0f be       	out	0x3f, r0	; 63
 97a:	cd bf       	out	0x3d, r28	; 61
 97c:	09 94       	ijmp

0000097e <__epilogue_restores__>:
 97e:	2a 88       	ldd	r2, Y+18	; 0x12
 980:	39 88       	ldd	r3, Y+17	; 0x11
 982:	48 88       	ldd	r4, Y+16	; 0x10
 984:	5f 84       	ldd	r5, Y+15	; 0x0f
 986:	6e 84       	ldd	r6, Y+14	; 0x0e
 988:	7d 84       	ldd	r7, Y+13	; 0x0d
 98a:	8c 84       	ldd	r8, Y+12	; 0x0c
 98c:	9b 84       	ldd	r9, Y+11	; 0x0b
 98e:	aa 84       	ldd	r10, Y+10	; 0x0a
 990:	b9 84       	ldd	r11, Y+9	; 0x09
 992:	c8 84       	ldd	r12, Y+8	; 0x08
 994:	df 80       	ldd	r13, Y+7	; 0x07
 996:	ee 80       	ldd	r14, Y+6	; 0x06
 998:	fd 80       	ldd	r15, Y+5	; 0x05
 99a:	0c 81       	ldd	r16, Y+4	; 0x04
 99c:	1b 81       	ldd	r17, Y+3	; 0x03
 99e:	aa 81       	ldd	r26, Y+2	; 0x02
 9a0:	b9 81       	ldd	r27, Y+1	; 0x01
 9a2:	ce 0f       	add	r28, r30
 9a4:	d1 1d       	adc	r29, r1
 9a6:	0f b6       	in	r0, 0x3f	; 63
 9a8:	f8 94       	cli
 9aa:	de bf       	out	0x3e, r29	; 62
 9ac:	0f be       	out	0x3f, r0	; 63
 9ae:	cd bf       	out	0x3d, r28	; 61
 9b0:	ed 01       	movw	r28, r26
 9b2:	08 95       	ret

000009b4 <_exit>:
 9b4:	f8 94       	cli

000009b6 <__stop_program>:
 9b6:	ff cf       	rjmp	.-2      	; 0x9b6 <__stop_program>
