
Exercise 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000093e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  0000093e  000009d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000009  00800072  00800072  000009e4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009e4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a40  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f6f  00000000  00000000  00000b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000089b  00000000  00000000  00001abb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006b5  00000000  00000000  00002356  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d8  00000000  00000000  00002a0c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005b4  00000000  00000000  00002be4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000634  00000000  00000000  00003198  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  000037cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__vector_5>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e3       	ldi	r30, 0x3E	; 62
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 37       	cpi	r26, 0x72	; 114
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 e7       	ldi	r26, 0x72	; 114
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ab 37       	cpi	r26, 0x7B	; 123
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 1c 01 	call	0x238	; 0x238 <main>
  8a:	0c 94 9d 04 	jmp	0x93a	; 0x93a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <LCD_sendCommand>:
	LCD_displayString(String);
}

void LCD_clearScreen()
{
	LCD_sendCommand(CLEAR_DISPLAY);
  92:	92 b3       	in	r25, 0x12	; 18
  94:	9f 7e       	andi	r25, 0xEF	; 239
  96:	92 bb       	out	0x12, r25	; 18
  98:	92 b3       	in	r25, 0x12	; 18
  9a:	9f 7d       	andi	r25, 0xDF	; 223
  9c:	92 bb       	out	0x12, r25	; 18
  9e:	e9 ef       	ldi	r30, 0xF9	; 249
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	31 97       	sbiw	r30, 0x01	; 1
  a4:	f1 f7       	brne	.-4      	; 0xa2 <LCD_sendCommand+0x10>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <LCD_sendCommand+0x16>
  a8:	00 00       	nop
  aa:	92 b3       	in	r25, 0x12	; 18
  ac:	90 68       	ori	r25, 0x80	; 128
  ae:	92 bb       	out	0x12, r25	; 18
  b0:	e9 ef       	ldi	r30, 0xF9	; 249
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	31 97       	sbiw	r30, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <LCD_sendCommand+0x22>
  b8:	00 c0       	rjmp	.+0      	; 0xba <LCD_sendCommand+0x28>
  ba:	00 00       	nop
  bc:	85 bb       	out	0x15, r24	; 21
  be:	89 ef       	ldi	r24, 0xF9	; 249
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <LCD_sendCommand+0x30>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <LCD_sendCommand+0x36>
  c8:	00 00       	nop
  ca:	82 b3       	in	r24, 0x12	; 18
  cc:	8f 77       	andi	r24, 0x7F	; 127
  ce:	82 bb       	out	0x12, r24	; 18
  d0:	e9 ef       	ldi	r30, 0xF9	; 249
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	31 97       	sbiw	r30, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <LCD_sendCommand+0x42>
  d8:	00 c0       	rjmp	.+0      	; 0xda <LCD_sendCommand+0x48>
  da:	00 00       	nop
  dc:	08 95       	ret

000000de <LCD_init>:
  de:	8f ef       	ldi	r24, 0xFF	; 255
  e0:	84 bb       	out	0x14, r24	; 20
  e2:	81 b3       	in	r24, 0x11	; 17
  e4:	80 6b       	ori	r24, 0xB0	; 176
  e6:	81 bb       	out	0x11, r24	; 17
  e8:	88 e3       	ldi	r24, 0x38	; 56
  ea:	0e 94 49 00 	call	0x92	; 0x92 <LCD_sendCommand>
  ee:	8f e0       	ldi	r24, 0x0F	; 15
  f0:	0e 94 49 00 	call	0x92	; 0x92 <LCD_sendCommand>
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	0e 94 49 00 	call	0x92	; 0x92 <LCD_sendCommand>
  fa:	08 95       	ret

000000fc <LCD_displayCharacter>:
  fc:	92 b3       	in	r25, 0x12	; 18
  fe:	90 61       	ori	r25, 0x10	; 16
 100:	92 bb       	out	0x12, r25	; 18
 102:	92 b3       	in	r25, 0x12	; 18
 104:	9f 7d       	andi	r25, 0xDF	; 223
 106:	92 bb       	out	0x12, r25	; 18
 108:	e9 ef       	ldi	r30, 0xF9	; 249
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	31 97       	sbiw	r30, 0x01	; 1
 10e:	f1 f7       	brne	.-4      	; 0x10c <LCD_displayCharacter+0x10>
 110:	00 c0       	rjmp	.+0      	; 0x112 <LCD_displayCharacter+0x16>
 112:	00 00       	nop
 114:	92 b3       	in	r25, 0x12	; 18
 116:	90 68       	ori	r25, 0x80	; 128
 118:	92 bb       	out	0x12, r25	; 18
 11a:	e9 ef       	ldi	r30, 0xF9	; 249
 11c:	f0 e0       	ldi	r31, 0x00	; 0
 11e:	31 97       	sbiw	r30, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <LCD_displayCharacter+0x22>
 122:	00 c0       	rjmp	.+0      	; 0x124 <LCD_displayCharacter+0x28>
 124:	00 00       	nop
 126:	85 bb       	out	0x15, r24	; 21
 128:	89 ef       	ldi	r24, 0xF9	; 249
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	01 97       	sbiw	r24, 0x01	; 1
 12e:	f1 f7       	brne	.-4      	; 0x12c <LCD_displayCharacter+0x30>
 130:	00 c0       	rjmp	.+0      	; 0x132 <LCD_displayCharacter+0x36>
 132:	00 00       	nop
 134:	82 b3       	in	r24, 0x12	; 18
 136:	8f 77       	andi	r24, 0x7F	; 127
 138:	82 bb       	out	0x12, r24	; 18
 13a:	e9 ef       	ldi	r30, 0xF9	; 249
 13c:	f0 e0       	ldi	r31, 0x00	; 0
 13e:	31 97       	sbiw	r30, 0x01	; 1
 140:	f1 f7       	brne	.-4      	; 0x13e <LCD_displayCharacter+0x42>
 142:	00 c0       	rjmp	.+0      	; 0x144 <LCD_displayCharacter+0x48>
 144:	00 00       	nop
 146:	08 95       	ret

00000148 <LCD_displayString>:
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	ec 01       	movw	r28, r24
 14e:	03 c0       	rjmp	.+6      	; 0x156 <LCD_displayString+0xe>
 150:	0e 94 7e 00 	call	0xfc	; 0xfc <LCD_displayCharacter>
 154:	21 96       	adiw	r28, 0x01	; 1
 156:	88 81       	ld	r24, Y
 158:	81 11       	cpse	r24, r1
 15a:	fa cf       	rjmp	.-12     	; 0x150 <LCD_displayString+0x8>
 15c:	df 91       	pop	r29
 15e:	cf 91       	pop	r28
 160:	08 95       	ret

00000162 <LCD_goToRowColumn>:
 162:	88 23       	and	r24, r24
 164:	29 f0       	breq	.+10     	; 0x170 <LCD_goToRowColumn+0xe>
 166:	81 30       	cpi	r24, 0x01	; 1
 168:	11 f0       	breq	.+4      	; 0x16e <LCD_goToRowColumn+0xc>
 16a:	60 e0       	ldi	r22, 0x00	; 0
 16c:	01 c0       	rjmp	.+2      	; 0x170 <LCD_goToRowColumn+0xe>
 16e:	60 5c       	subi	r22, 0xC0	; 192
 170:	86 2f       	mov	r24, r22
 172:	80 68       	ori	r24, 0x80	; 128
 174:	0e 94 49 00 	call	0x92	; 0x92 <LCD_sendCommand>
 178:	08 95       	ret

0000017a <LCD_integrToString>:
}

void LCD_integrToString(uint32_t data)
{
 17a:	0f 93       	push	r16
 17c:	1f 93       	push	r17
 17e:	cf 93       	push	r28
 180:	df 93       	push	r29
 182:	00 d0       	rcall	.+0      	; 0x184 <LCD_integrToString+0xa>
 184:	00 d0       	rcall	.+0      	; 0x186 <LCD_integrToString+0xc>
 186:	cd b7       	in	r28, 0x3d	; 61
 188:	de b7       	in	r29, 0x3e	; 62
	uint8_t buffer[4]={0};
 18a:	19 82       	std	Y+1, r1	; 0x01
 18c:	1a 82       	std	Y+2, r1	; 0x02
 18e:	1b 82       	std	Y+3, r1	; 0x03
 190:	1c 82       	std	Y+4, r1	; 0x04
    sprintf(buffer,"%d",data);
 192:	9f 93       	push	r25
 194:	8f 93       	push	r24
 196:	7f 93       	push	r23
 198:	6f 93       	push	r22
 19a:	80 e6       	ldi	r24, 0x60	; 96
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	9f 93       	push	r25
 1a0:	8f 93       	push	r24
 1a2:	8e 01       	movw	r16, r28
 1a4:	0f 5f       	subi	r16, 0xFF	; 255
 1a6:	1f 4f       	sbci	r17, 0xFF	; 255
 1a8:	1f 93       	push	r17
 1aa:	0f 93       	push	r16
 1ac:	0e 94 b3 01 	call	0x366	; 0x366 <sprintf>
	LCD_displayString(buffer);
 1b0:	c8 01       	movw	r24, r16
 1b2:	0e 94 a4 00 	call	0x148	; 0x148 <LCD_displayString>
}
 1b6:	0f b6       	in	r0, 0x3f	; 63
 1b8:	f8 94       	cli
 1ba:	de bf       	out	0x3e, r29	; 62
 1bc:	0f be       	out	0x3f, r0	; 63
 1be:	cd bf       	out	0x3d, r28	; 61
 1c0:	0f 90       	pop	r0
 1c2:	0f 90       	pop	r0
 1c4:	0f 90       	pop	r0
 1c6:	0f 90       	pop	r0
 1c8:	df 91       	pop	r29
 1ca:	cf 91       	pop	r28
 1cc:	1f 91       	pop	r17
 1ce:	0f 91       	pop	r16
 1d0:	08 95       	ret

000001d2 <edgeProcessing>:
uint16_t  g_periodAndhighTime;


void edgeProcessing(void) {
	
	g_edgeCounter++;
 1d2:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <g_edgeCounter>
 1d6:	8f 5f       	subi	r24, 0xFF	; 255
 1d8:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <g_edgeCounter>
	
	if (g_edgeCounter == 1)
 1dc:	81 30       	cpi	r24, 0x01	; 1
 1de:	31 f4       	brne	.+12     	; 0x1ec <edgeProcessing+0x1a>
	{
		ICU_clearTimer();
 1e0:	0e 94 b0 01 	call	0x360	; 0x360 <ICU_clearTimer>
		ICU_setEdgeDetectionType(FALLING_EDGE);
 1e4:	80 e0       	ldi	r24, 0x00	; 0
 1e6:	0e 94 a4 01 	call	0x348	; 0x348 <ICU_setEdgeDetectionType>
 1ea:	08 95       	ret
	}
	else if (g_edgeCounter == 2)
 1ec:	82 30       	cpi	r24, 0x02	; 2
 1ee:	51 f4       	brne	.+20     	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
	{
		g_highTime = ICU_getTimerValue();
 1f0:	0e 94 ad 01 	call	0x35a	; 0x35a <ICU_getTimerValue>
 1f4:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <g_highTime+0x1>
 1f8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <g_highTime>
		ICU_setEdgeDetectionType(RISING_EDGE);
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	0e 94 a4 01 	call	0x348	; 0x348 <ICU_setEdgeDetectionType>
 202:	08 95       	ret
	}
	else if (g_edgeCounter == 3)
 204:	83 30       	cpi	r24, 0x03	; 3
 206:	51 f4       	brne	.+20     	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
	{
		g_periodTime = ICU_getTimerValue();
 208:	0e 94 ad 01 	call	0x35a	; 0x35a <ICU_getTimerValue>
 20c:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <g_periodTime+0x1>
 210:	80 93 79 00 	sts	0x0079, r24	; 0x800079 <g_periodTime>
		ICU_setEdgeDetectionType(FALLING_EDGE);
 214:	80 e0       	ldi	r24, 0x00	; 0
 216:	0e 94 a4 01 	call	0x348	; 0x348 <ICU_setEdgeDetectionType>
 21a:	08 95       	ret
	} 
	else if (g_edgeCounter == 4)
 21c:	84 30       	cpi	r24, 0x04	; 4
 21e:	59 f4       	brne	.+22     	; 0x236 <__EEPROM_REGION_LENGTH__+0x36>
	{
		g_periodAndhighTime = ICU_getTimerValue();
 220:	0e 94 ad 01 	call	0x35a	; 0x35a <ICU_getTimerValue>
 224:	90 93 78 00 	sts	0x0078, r25	; 0x800078 <g_periodAndhighTime+0x1>
 228:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <g_periodAndhighTime>
		ICU_setEdgeDetectionType(RISING_EDGE);
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	0e 94 a4 01 	call	0x348	; 0x348 <ICU_setEdgeDetectionType>
		ICU_clearTimer();
 232:	0e 94 b0 01 	call	0x360	; 0x360 <ICU_clearTimer>
 236:	08 95       	ret

00000238 <main>:
	
}


int main(void)
{
 238:	cf 93       	push	r28
 23a:	df 93       	push	r29
 23c:	00 d0       	rcall	.+0      	; 0x23e <main+0x6>
 23e:	cd b7       	in	r28, 0x3d	; 61
 240:	de b7       	in	r29, 0x3e	; 62
    /* Replace with your application code */
	
	/* 1. Enable Global Interrupts */
	SREG |= (1<<7);
 242:	8f b7       	in	r24, 0x3f	; 63
 244:	80 68       	ori	r24, 0x80	; 128
 246:	8f bf       	out	0x3f, r24	; 63
	
	/* 2. Init LCD */
	LCD_init();
 248:	0e 94 6f 00 	call	0xde	; 0xde <LCD_init>
	
	/* 3. Configure ICU */
	ICU_configType ICUvar = {F_CPU_CLOCK,RISING_EDGE};
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	89 83       	std	Y+1, r24	; 0x01
 250:	8a 83       	std	Y+2, r24	; 0x02
	ICU_setCallBack(edgeProcessing);
 252:	89 ee       	ldi	r24, 0xE9	; 233
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	0e 94 9f 01 	call	0x33e	; 0x33e <ICU_setCallBack>
	ICU_init(&ICUvar);	
 25a:	ce 01       	movw	r24, r28
 25c:	01 96       	adiw	r24, 0x01	; 1
 25e:	0e 94 81 01 	call	0x302	; 0x302 <ICU_init>
	
	/* 4. Variable to hold period */
	uint16_t period = 0;
	
	/* 5. Display String */
	LCD_displayString("Period ");
 262:	83 e6       	ldi	r24, 0x63	; 99
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	0e 94 a4 00 	call	0x148	; 0x148 <LCD_displayString>
		
    while (1) 
    {
		if (g_edgeCounter == 4)
 26a:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <g_edgeCounter>
 26e:	84 30       	cpi	r24, 0x04	; 4
 270:	e1 f7       	brne	.-8      	; 0x26a <main+0x32>
		{
			period = (g_periodAndhighTime - g_highTime);
 272:	60 91 77 00 	lds	r22, 0x0077	; 0x800077 <g_periodAndhighTime>
 276:	70 91 78 00 	lds	r23, 0x0078	; 0x800078 <g_periodAndhighTime+0x1>
 27a:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <g_highTime>
 27e:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <g_highTime+0x1>
 282:	8b 01       	movw	r16, r22
 284:	08 1b       	sub	r16, r24
 286:	19 0b       	sbc	r17, r25
			LCD_displayString("   "); /* Delete old values */
 288:	8b e6       	ldi	r24, 0x6B	; 107
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	0e 94 a4 00 	call	0x148	; 0x148 <LCD_displayString>
			LCD_goToRowColumn(0,8);
 290:	68 e0       	ldi	r22, 0x08	; 8
 292:	80 e0       	ldi	r24, 0x00	; 0
 294:	0e 94 b1 00 	call	0x162	; 0x162 <LCD_goToRowColumn>
			LCD_integrToString(period);
 298:	b8 01       	movw	r22, r16
 29a:	80 e0       	ldi	r24, 0x00	; 0
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_integrToString>
			LCD_displayString("us");
 2a2:	8f e6       	ldi	r24, 0x6F	; 111
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	0e 94 a4 00 	call	0x148	; 0x148 <LCD_displayString>
			g_edgeCounter = 0;
 2aa:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <g_edgeCounter>
 2ae:	dd cf       	rjmp	.-70     	; 0x26a <main+0x32>

000002b0 <__vector_5>:
	TCCR1B = 0;
	TCNT1  = 0;
	ICR1   = 0;
	
	/* 2. Disable ICU Interrupt */
	TIMSK &= ~(1<<TICIE1);
 2b0:	1f 92       	push	r1
 2b2:	0f 92       	push	r0
 2b4:	0f b6       	in	r0, 0x3f	; 63
 2b6:	0f 92       	push	r0
 2b8:	11 24       	eor	r1, r1
 2ba:	2f 93       	push	r18
 2bc:	3f 93       	push	r19
 2be:	4f 93       	push	r20
 2c0:	5f 93       	push	r21
 2c2:	6f 93       	push	r22
 2c4:	7f 93       	push	r23
 2c6:	8f 93       	push	r24
 2c8:	9f 93       	push	r25
 2ca:	af 93       	push	r26
 2cc:	bf 93       	push	r27
 2ce:	ef 93       	push	r30
 2d0:	ff 93       	push	r31
 2d2:	e0 91 72 00 	lds	r30, 0x0072	; 0x800072 <__data_end>
 2d6:	f0 91 73 00 	lds	r31, 0x0073	; 0x800073 <__data_end+0x1>
 2da:	30 97       	sbiw	r30, 0x00	; 0
 2dc:	09 f0       	breq	.+2      	; 0x2e0 <__vector_5+0x30>
 2de:	09 95       	icall
 2e0:	ff 91       	pop	r31
 2e2:	ef 91       	pop	r30
 2e4:	bf 91       	pop	r27
 2e6:	af 91       	pop	r26
 2e8:	9f 91       	pop	r25
 2ea:	8f 91       	pop	r24
 2ec:	7f 91       	pop	r23
 2ee:	6f 91       	pop	r22
 2f0:	5f 91       	pop	r21
 2f2:	4f 91       	pop	r20
 2f4:	3f 91       	pop	r19
 2f6:	2f 91       	pop	r18
 2f8:	0f 90       	pop	r0
 2fa:	0f be       	out	0x3f, r0	; 63
 2fc:	0f 90       	pop	r0
 2fe:	1f 90       	pop	r1
 300:	18 95       	reti

00000302 <ICU_init>:
 302:	fc 01       	movw	r30, r24
 304:	91 b3       	in	r25, 0x11	; 17
 306:	9f 7b       	andi	r25, 0xBF	; 191
 308:	91 bb       	out	0x11, r25	; 17
 30a:	9f b5       	in	r25, 0x2f	; 47
 30c:	9c 60       	ori	r25, 0x0C	; 12
 30e:	9f bd       	out	0x2f, r25	; 47
 310:	4e b5       	in	r20, 0x2e	; 46
 312:	91 81       	ldd	r25, Z+1	; 0x01
 314:	80 e4       	ldi	r24, 0x40	; 64
 316:	98 9f       	mul	r25, r24
 318:	90 01       	movw	r18, r0
 31a:	11 24       	eor	r1, r1
 31c:	94 2f       	mov	r25, r20
 31e:	9f 7b       	andi	r25, 0xBF	; 191
 320:	29 2b       	or	r18, r25
 322:	2e bd       	out	0x2e, r18	; 46
 324:	99 b7       	in	r25, 0x39	; 57
 326:	90 62       	ori	r25, 0x20	; 32
 328:	99 bf       	out	0x39, r25	; 57
 32a:	1d bc       	out	0x2d, r1	; 45
 32c:	1c bc       	out	0x2c, r1	; 44
 32e:	17 bc       	out	0x27, r1	; 39
 330:	16 bc       	out	0x26, r1	; 38
 332:	8e b5       	in	r24, 0x2e	; 46
 334:	90 81       	ld	r25, Z
 336:	88 7f       	andi	r24, 0xF8	; 248
 338:	89 2b       	or	r24, r25
 33a:	8e bd       	out	0x2e, r24	; 46
 33c:	08 95       	ret

0000033e <ICU_setCallBack>:
 33e:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <__data_end+0x1>
 342:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__data_end>
 346:	08 95       	ret

00000348 <ICU_setEdgeDetectionType>:
Description : Change Edge detection of ICU
*/
void ICU_setEdgeDetectionType(ICU_edgeType edgeType) {
	
	/* 1. Change Edge type  */
	TCCR1B  = (TCCR1B & 0xBF) | (edgeType << ICES1);
 348:	2e b5       	in	r18, 0x2e	; 46
 34a:	30 e4       	ldi	r19, 0x40	; 64
 34c:	83 9f       	mul	r24, r19
 34e:	c0 01       	movw	r24, r0
 350:	11 24       	eor	r1, r1
 352:	2f 7b       	andi	r18, 0xBF	; 191
 354:	82 2b       	or	r24, r18
 356:	8e bd       	out	0x2e, r24	; 46
 358:	08 95       	ret

0000035a <ICU_getTimerValue>:
	
	/* 1. Declare variable to store value */
	uint16_t ret_var = 0;
	
	/* 2. Store timer value in variable */
	ret_var = ICR1; 
 35a:	86 b5       	in	r24, 0x26	; 38
 35c:	97 b5       	in	r25, 0x27	; 39
	
	/* 3. Return timer value */
	return ret_var;
	
}
 35e:	08 95       	ret

00000360 <ICU_clearTimer>:
Description : Clear Timer Register
*/
void ICU_clearTimer() {
	
	/* 1. Clear Timer value */
	TCNT1 = 0;
 360:	1d bc       	out	0x2d, r1	; 45
 362:	1c bc       	out	0x2c, r1	; 44
 364:	08 95       	ret

00000366 <sprintf>:
 366:	ae e0       	ldi	r26, 0x0E	; 14
 368:	b0 e0       	ldi	r27, 0x00	; 0
 36a:	e9 eb       	ldi	r30, 0xB9	; 185
 36c:	f1 e0       	ldi	r31, 0x01	; 1
 36e:	0c 94 74 04 	jmp	0x8e8	; 0x8e8 <__prologue_saves__+0x1c>
 372:	0d 89       	ldd	r16, Y+21	; 0x15
 374:	1e 89       	ldd	r17, Y+22	; 0x16
 376:	86 e0       	ldi	r24, 0x06	; 6
 378:	8c 83       	std	Y+4, r24	; 0x04
 37a:	1a 83       	std	Y+2, r17	; 0x02
 37c:	09 83       	std	Y+1, r16	; 0x01
 37e:	8f ef       	ldi	r24, 0xFF	; 255
 380:	9f e7       	ldi	r25, 0x7F	; 127
 382:	9e 83       	std	Y+6, r25	; 0x06
 384:	8d 83       	std	Y+5, r24	; 0x05
 386:	ae 01       	movw	r20, r28
 388:	47 5e       	subi	r20, 0xE7	; 231
 38a:	5f 4f       	sbci	r21, 0xFF	; 255
 38c:	6f 89       	ldd	r22, Y+23	; 0x17
 38e:	78 8d       	ldd	r23, Y+24	; 0x18
 390:	ce 01       	movw	r24, r28
 392:	01 96       	adiw	r24, 0x01	; 1
 394:	0e 94 d5 01 	call	0x3aa	; 0x3aa <vfprintf>
 398:	ef 81       	ldd	r30, Y+7	; 0x07
 39a:	f8 85       	ldd	r31, Y+8	; 0x08
 39c:	e0 0f       	add	r30, r16
 39e:	f1 1f       	adc	r31, r17
 3a0:	10 82       	st	Z, r1
 3a2:	2e 96       	adiw	r28, 0x0e	; 14
 3a4:	e4 e0       	ldi	r30, 0x04	; 4
 3a6:	0c 94 90 04 	jmp	0x920	; 0x920 <__epilogue_restores__+0x1c>

000003aa <vfprintf>:
 3aa:	ab e0       	ldi	r26, 0x0B	; 11
 3ac:	b0 e0       	ldi	r27, 0x00	; 0
 3ae:	eb ed       	ldi	r30, 0xDB	; 219
 3b0:	f1 e0       	ldi	r31, 0x01	; 1
 3b2:	0c 94 66 04 	jmp	0x8cc	; 0x8cc <__prologue_saves__>
 3b6:	6c 01       	movw	r12, r24
 3b8:	7b 01       	movw	r14, r22
 3ba:	8a 01       	movw	r16, r20
 3bc:	fc 01       	movw	r30, r24
 3be:	17 82       	std	Z+7, r1	; 0x07
 3c0:	16 82       	std	Z+6, r1	; 0x06
 3c2:	83 81       	ldd	r24, Z+3	; 0x03
 3c4:	81 ff       	sbrs	r24, 1
 3c6:	cc c1       	rjmp	.+920    	; 0x760 <__stack+0x301>
 3c8:	ce 01       	movw	r24, r28
 3ca:	01 96       	adiw	r24, 0x01	; 1
 3cc:	3c 01       	movw	r6, r24
 3ce:	f6 01       	movw	r30, r12
 3d0:	93 81       	ldd	r25, Z+3	; 0x03
 3d2:	f7 01       	movw	r30, r14
 3d4:	93 fd       	sbrc	r25, 3
 3d6:	85 91       	lpm	r24, Z+
 3d8:	93 ff       	sbrs	r25, 3
 3da:	81 91       	ld	r24, Z+
 3dc:	7f 01       	movw	r14, r30
 3de:	88 23       	and	r24, r24
 3e0:	09 f4       	brne	.+2      	; 0x3e4 <vfprintf+0x3a>
 3e2:	ba c1       	rjmp	.+884    	; 0x758 <__stack+0x2f9>
 3e4:	85 32       	cpi	r24, 0x25	; 37
 3e6:	39 f4       	brne	.+14     	; 0x3f6 <vfprintf+0x4c>
 3e8:	93 fd       	sbrc	r25, 3
 3ea:	85 91       	lpm	r24, Z+
 3ec:	93 ff       	sbrs	r25, 3
 3ee:	81 91       	ld	r24, Z+
 3f0:	7f 01       	movw	r14, r30
 3f2:	85 32       	cpi	r24, 0x25	; 37
 3f4:	29 f4       	brne	.+10     	; 0x400 <__DATA_REGION_LENGTH__>
 3f6:	b6 01       	movw	r22, r12
 3f8:	90 e0       	ldi	r25, 0x00	; 0
 3fa:	0e 94 cc 03 	call	0x798	; 0x798 <fputc>
 3fe:	e7 cf       	rjmp	.-50     	; 0x3ce <vfprintf+0x24>
 400:	91 2c       	mov	r9, r1
 402:	21 2c       	mov	r2, r1
 404:	31 2c       	mov	r3, r1
 406:	ff e1       	ldi	r31, 0x1F	; 31
 408:	f3 15       	cp	r31, r3
 40a:	d8 f0       	brcs	.+54     	; 0x442 <__DATA_REGION_LENGTH__+0x42>
 40c:	8b 32       	cpi	r24, 0x2B	; 43
 40e:	79 f0       	breq	.+30     	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
 410:	38 f4       	brcc	.+14     	; 0x420 <__DATA_REGION_LENGTH__+0x20>
 412:	80 32       	cpi	r24, 0x20	; 32
 414:	79 f0       	breq	.+30     	; 0x434 <__DATA_REGION_LENGTH__+0x34>
 416:	83 32       	cpi	r24, 0x23	; 35
 418:	a1 f4       	brne	.+40     	; 0x442 <__DATA_REGION_LENGTH__+0x42>
 41a:	23 2d       	mov	r18, r3
 41c:	20 61       	ori	r18, 0x10	; 16
 41e:	1d c0       	rjmp	.+58     	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
 420:	8d 32       	cpi	r24, 0x2D	; 45
 422:	61 f0       	breq	.+24     	; 0x43c <__DATA_REGION_LENGTH__+0x3c>
 424:	80 33       	cpi	r24, 0x30	; 48
 426:	69 f4       	brne	.+26     	; 0x442 <__DATA_REGION_LENGTH__+0x42>
 428:	23 2d       	mov	r18, r3
 42a:	21 60       	ori	r18, 0x01	; 1
 42c:	16 c0       	rjmp	.+44     	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
 42e:	83 2d       	mov	r24, r3
 430:	82 60       	ori	r24, 0x02	; 2
 432:	38 2e       	mov	r3, r24
 434:	e3 2d       	mov	r30, r3
 436:	e4 60       	ori	r30, 0x04	; 4
 438:	3e 2e       	mov	r3, r30
 43a:	2a c0       	rjmp	.+84     	; 0x490 <__stack+0x31>
 43c:	f3 2d       	mov	r31, r3
 43e:	f8 60       	ori	r31, 0x08	; 8
 440:	1d c0       	rjmp	.+58     	; 0x47c <__stack+0x1d>
 442:	37 fc       	sbrc	r3, 7
 444:	2d c0       	rjmp	.+90     	; 0x4a0 <__stack+0x41>
 446:	20 ed       	ldi	r18, 0xD0	; 208
 448:	28 0f       	add	r18, r24
 44a:	2a 30       	cpi	r18, 0x0A	; 10
 44c:	40 f0       	brcs	.+16     	; 0x45e <__DATA_REGION_LENGTH__+0x5e>
 44e:	8e 32       	cpi	r24, 0x2E	; 46
 450:	b9 f4       	brne	.+46     	; 0x480 <__stack+0x21>
 452:	36 fc       	sbrc	r3, 6
 454:	81 c1       	rjmp	.+770    	; 0x758 <__stack+0x2f9>
 456:	23 2d       	mov	r18, r3
 458:	20 64       	ori	r18, 0x40	; 64
 45a:	32 2e       	mov	r3, r18
 45c:	19 c0       	rjmp	.+50     	; 0x490 <__stack+0x31>
 45e:	36 fe       	sbrs	r3, 6
 460:	06 c0       	rjmp	.+12     	; 0x46e <__stack+0xf>
 462:	8a e0       	ldi	r24, 0x0A	; 10
 464:	98 9e       	mul	r9, r24
 466:	20 0d       	add	r18, r0
 468:	11 24       	eor	r1, r1
 46a:	92 2e       	mov	r9, r18
 46c:	11 c0       	rjmp	.+34     	; 0x490 <__stack+0x31>
 46e:	ea e0       	ldi	r30, 0x0A	; 10
 470:	2e 9e       	mul	r2, r30
 472:	20 0d       	add	r18, r0
 474:	11 24       	eor	r1, r1
 476:	22 2e       	mov	r2, r18
 478:	f3 2d       	mov	r31, r3
 47a:	f0 62       	ori	r31, 0x20	; 32
 47c:	3f 2e       	mov	r3, r31
 47e:	08 c0       	rjmp	.+16     	; 0x490 <__stack+0x31>
 480:	8c 36       	cpi	r24, 0x6C	; 108
 482:	21 f4       	brne	.+8      	; 0x48c <__stack+0x2d>
 484:	83 2d       	mov	r24, r3
 486:	80 68       	ori	r24, 0x80	; 128
 488:	38 2e       	mov	r3, r24
 48a:	02 c0       	rjmp	.+4      	; 0x490 <__stack+0x31>
 48c:	88 36       	cpi	r24, 0x68	; 104
 48e:	41 f4       	brne	.+16     	; 0x4a0 <__stack+0x41>
 490:	f7 01       	movw	r30, r14
 492:	93 fd       	sbrc	r25, 3
 494:	85 91       	lpm	r24, Z+
 496:	93 ff       	sbrs	r25, 3
 498:	81 91       	ld	r24, Z+
 49a:	7f 01       	movw	r14, r30
 49c:	81 11       	cpse	r24, r1
 49e:	b3 cf       	rjmp	.-154    	; 0x406 <__DATA_REGION_LENGTH__+0x6>
 4a0:	98 2f       	mov	r25, r24
 4a2:	9f 7d       	andi	r25, 0xDF	; 223
 4a4:	95 54       	subi	r25, 0x45	; 69
 4a6:	93 30       	cpi	r25, 0x03	; 3
 4a8:	28 f4       	brcc	.+10     	; 0x4b4 <__stack+0x55>
 4aa:	0c 5f       	subi	r16, 0xFC	; 252
 4ac:	1f 4f       	sbci	r17, 0xFF	; 255
 4ae:	9f e3       	ldi	r25, 0x3F	; 63
 4b0:	99 83       	std	Y+1, r25	; 0x01
 4b2:	0d c0       	rjmp	.+26     	; 0x4ce <__stack+0x6f>
 4b4:	83 36       	cpi	r24, 0x63	; 99
 4b6:	31 f0       	breq	.+12     	; 0x4c4 <__stack+0x65>
 4b8:	83 37       	cpi	r24, 0x73	; 115
 4ba:	71 f0       	breq	.+28     	; 0x4d8 <__stack+0x79>
 4bc:	83 35       	cpi	r24, 0x53	; 83
 4be:	09 f0       	breq	.+2      	; 0x4c2 <__stack+0x63>
 4c0:	59 c0       	rjmp	.+178    	; 0x574 <__stack+0x115>
 4c2:	21 c0       	rjmp	.+66     	; 0x506 <__stack+0xa7>
 4c4:	f8 01       	movw	r30, r16
 4c6:	80 81       	ld	r24, Z
 4c8:	89 83       	std	Y+1, r24	; 0x01
 4ca:	0e 5f       	subi	r16, 0xFE	; 254
 4cc:	1f 4f       	sbci	r17, 0xFF	; 255
 4ce:	88 24       	eor	r8, r8
 4d0:	83 94       	inc	r8
 4d2:	91 2c       	mov	r9, r1
 4d4:	53 01       	movw	r10, r6
 4d6:	13 c0       	rjmp	.+38     	; 0x4fe <__stack+0x9f>
 4d8:	28 01       	movw	r4, r16
 4da:	f2 e0       	ldi	r31, 0x02	; 2
 4dc:	4f 0e       	add	r4, r31
 4de:	51 1c       	adc	r5, r1
 4e0:	f8 01       	movw	r30, r16
 4e2:	a0 80       	ld	r10, Z
 4e4:	b1 80       	ldd	r11, Z+1	; 0x01
 4e6:	36 fe       	sbrs	r3, 6
 4e8:	03 c0       	rjmp	.+6      	; 0x4f0 <__stack+0x91>
 4ea:	69 2d       	mov	r22, r9
 4ec:	70 e0       	ldi	r23, 0x00	; 0
 4ee:	02 c0       	rjmp	.+4      	; 0x4f4 <__stack+0x95>
 4f0:	6f ef       	ldi	r22, 0xFF	; 255
 4f2:	7f ef       	ldi	r23, 0xFF	; 255
 4f4:	c5 01       	movw	r24, r10
 4f6:	0e 94 c1 03 	call	0x782	; 0x782 <strnlen>
 4fa:	4c 01       	movw	r8, r24
 4fc:	82 01       	movw	r16, r4
 4fe:	f3 2d       	mov	r31, r3
 500:	ff 77       	andi	r31, 0x7F	; 127
 502:	3f 2e       	mov	r3, r31
 504:	16 c0       	rjmp	.+44     	; 0x532 <__stack+0xd3>
 506:	28 01       	movw	r4, r16
 508:	22 e0       	ldi	r18, 0x02	; 2
 50a:	42 0e       	add	r4, r18
 50c:	51 1c       	adc	r5, r1
 50e:	f8 01       	movw	r30, r16
 510:	a0 80       	ld	r10, Z
 512:	b1 80       	ldd	r11, Z+1	; 0x01
 514:	36 fe       	sbrs	r3, 6
 516:	03 c0       	rjmp	.+6      	; 0x51e <__stack+0xbf>
 518:	69 2d       	mov	r22, r9
 51a:	70 e0       	ldi	r23, 0x00	; 0
 51c:	02 c0       	rjmp	.+4      	; 0x522 <__stack+0xc3>
 51e:	6f ef       	ldi	r22, 0xFF	; 255
 520:	7f ef       	ldi	r23, 0xFF	; 255
 522:	c5 01       	movw	r24, r10
 524:	0e 94 b6 03 	call	0x76c	; 0x76c <strnlen_P>
 528:	4c 01       	movw	r8, r24
 52a:	f3 2d       	mov	r31, r3
 52c:	f0 68       	ori	r31, 0x80	; 128
 52e:	3f 2e       	mov	r3, r31
 530:	82 01       	movw	r16, r4
 532:	33 fc       	sbrc	r3, 3
 534:	1b c0       	rjmp	.+54     	; 0x56c <__stack+0x10d>
 536:	82 2d       	mov	r24, r2
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	88 16       	cp	r8, r24
 53c:	99 06       	cpc	r9, r25
 53e:	b0 f4       	brcc	.+44     	; 0x56c <__stack+0x10d>
 540:	b6 01       	movw	r22, r12
 542:	80 e2       	ldi	r24, 0x20	; 32
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	0e 94 cc 03 	call	0x798	; 0x798 <fputc>
 54a:	2a 94       	dec	r2
 54c:	f4 cf       	rjmp	.-24     	; 0x536 <__stack+0xd7>
 54e:	f5 01       	movw	r30, r10
 550:	37 fc       	sbrc	r3, 7
 552:	85 91       	lpm	r24, Z+
 554:	37 fe       	sbrs	r3, 7
 556:	81 91       	ld	r24, Z+
 558:	5f 01       	movw	r10, r30
 55a:	b6 01       	movw	r22, r12
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	0e 94 cc 03 	call	0x798	; 0x798 <fputc>
 562:	21 10       	cpse	r2, r1
 564:	2a 94       	dec	r2
 566:	21 e0       	ldi	r18, 0x01	; 1
 568:	82 1a       	sub	r8, r18
 56a:	91 08       	sbc	r9, r1
 56c:	81 14       	cp	r8, r1
 56e:	91 04       	cpc	r9, r1
 570:	71 f7       	brne	.-36     	; 0x54e <__stack+0xef>
 572:	e8 c0       	rjmp	.+464    	; 0x744 <__stack+0x2e5>
 574:	84 36       	cpi	r24, 0x64	; 100
 576:	11 f0       	breq	.+4      	; 0x57c <__stack+0x11d>
 578:	89 36       	cpi	r24, 0x69	; 105
 57a:	41 f5       	brne	.+80     	; 0x5cc <__stack+0x16d>
 57c:	f8 01       	movw	r30, r16
 57e:	37 fe       	sbrs	r3, 7
 580:	07 c0       	rjmp	.+14     	; 0x590 <__stack+0x131>
 582:	60 81       	ld	r22, Z
 584:	71 81       	ldd	r23, Z+1	; 0x01
 586:	82 81       	ldd	r24, Z+2	; 0x02
 588:	93 81       	ldd	r25, Z+3	; 0x03
 58a:	0c 5f       	subi	r16, 0xFC	; 252
 58c:	1f 4f       	sbci	r17, 0xFF	; 255
 58e:	08 c0       	rjmp	.+16     	; 0x5a0 <__stack+0x141>
 590:	60 81       	ld	r22, Z
 592:	71 81       	ldd	r23, Z+1	; 0x01
 594:	07 2e       	mov	r0, r23
 596:	00 0c       	add	r0, r0
 598:	88 0b       	sbc	r24, r24
 59a:	99 0b       	sbc	r25, r25
 59c:	0e 5f       	subi	r16, 0xFE	; 254
 59e:	1f 4f       	sbci	r17, 0xFF	; 255
 5a0:	f3 2d       	mov	r31, r3
 5a2:	ff 76       	andi	r31, 0x6F	; 111
 5a4:	3f 2e       	mov	r3, r31
 5a6:	97 ff       	sbrs	r25, 7
 5a8:	09 c0       	rjmp	.+18     	; 0x5bc <__stack+0x15d>
 5aa:	90 95       	com	r25
 5ac:	80 95       	com	r24
 5ae:	70 95       	com	r23
 5b0:	61 95       	neg	r22
 5b2:	7f 4f       	sbci	r23, 0xFF	; 255
 5b4:	8f 4f       	sbci	r24, 0xFF	; 255
 5b6:	9f 4f       	sbci	r25, 0xFF	; 255
 5b8:	f0 68       	ori	r31, 0x80	; 128
 5ba:	3f 2e       	mov	r3, r31
 5bc:	2a e0       	ldi	r18, 0x0A	; 10
 5be:	30 e0       	ldi	r19, 0x00	; 0
 5c0:	a3 01       	movw	r20, r6
 5c2:	0e 94 08 04 	call	0x810	; 0x810 <__ultoa_invert>
 5c6:	88 2e       	mov	r8, r24
 5c8:	86 18       	sub	r8, r6
 5ca:	45 c0       	rjmp	.+138    	; 0x656 <__stack+0x1f7>
 5cc:	85 37       	cpi	r24, 0x75	; 117
 5ce:	31 f4       	brne	.+12     	; 0x5dc <__stack+0x17d>
 5d0:	23 2d       	mov	r18, r3
 5d2:	2f 7e       	andi	r18, 0xEF	; 239
 5d4:	b2 2e       	mov	r11, r18
 5d6:	2a e0       	ldi	r18, 0x0A	; 10
 5d8:	30 e0       	ldi	r19, 0x00	; 0
 5da:	25 c0       	rjmp	.+74     	; 0x626 <__stack+0x1c7>
 5dc:	93 2d       	mov	r25, r3
 5de:	99 7f       	andi	r25, 0xF9	; 249
 5e0:	b9 2e       	mov	r11, r25
 5e2:	8f 36       	cpi	r24, 0x6F	; 111
 5e4:	c1 f0       	breq	.+48     	; 0x616 <__stack+0x1b7>
 5e6:	18 f4       	brcc	.+6      	; 0x5ee <__stack+0x18f>
 5e8:	88 35       	cpi	r24, 0x58	; 88
 5ea:	79 f0       	breq	.+30     	; 0x60a <__stack+0x1ab>
 5ec:	b5 c0       	rjmp	.+362    	; 0x758 <__stack+0x2f9>
 5ee:	80 37       	cpi	r24, 0x70	; 112
 5f0:	19 f0       	breq	.+6      	; 0x5f8 <__stack+0x199>
 5f2:	88 37       	cpi	r24, 0x78	; 120
 5f4:	21 f0       	breq	.+8      	; 0x5fe <__stack+0x19f>
 5f6:	b0 c0       	rjmp	.+352    	; 0x758 <__stack+0x2f9>
 5f8:	e9 2f       	mov	r30, r25
 5fa:	e0 61       	ori	r30, 0x10	; 16
 5fc:	be 2e       	mov	r11, r30
 5fe:	b4 fe       	sbrs	r11, 4
 600:	0d c0       	rjmp	.+26     	; 0x61c <__stack+0x1bd>
 602:	fb 2d       	mov	r31, r11
 604:	f4 60       	ori	r31, 0x04	; 4
 606:	bf 2e       	mov	r11, r31
 608:	09 c0       	rjmp	.+18     	; 0x61c <__stack+0x1bd>
 60a:	34 fe       	sbrs	r3, 4
 60c:	0a c0       	rjmp	.+20     	; 0x622 <__stack+0x1c3>
 60e:	29 2f       	mov	r18, r25
 610:	26 60       	ori	r18, 0x06	; 6
 612:	b2 2e       	mov	r11, r18
 614:	06 c0       	rjmp	.+12     	; 0x622 <__stack+0x1c3>
 616:	28 e0       	ldi	r18, 0x08	; 8
 618:	30 e0       	ldi	r19, 0x00	; 0
 61a:	05 c0       	rjmp	.+10     	; 0x626 <__stack+0x1c7>
 61c:	20 e1       	ldi	r18, 0x10	; 16
 61e:	30 e0       	ldi	r19, 0x00	; 0
 620:	02 c0       	rjmp	.+4      	; 0x626 <__stack+0x1c7>
 622:	20 e1       	ldi	r18, 0x10	; 16
 624:	32 e0       	ldi	r19, 0x02	; 2
 626:	f8 01       	movw	r30, r16
 628:	b7 fe       	sbrs	r11, 7
 62a:	07 c0       	rjmp	.+14     	; 0x63a <__stack+0x1db>
 62c:	60 81       	ld	r22, Z
 62e:	71 81       	ldd	r23, Z+1	; 0x01
 630:	82 81       	ldd	r24, Z+2	; 0x02
 632:	93 81       	ldd	r25, Z+3	; 0x03
 634:	0c 5f       	subi	r16, 0xFC	; 252
 636:	1f 4f       	sbci	r17, 0xFF	; 255
 638:	06 c0       	rjmp	.+12     	; 0x646 <__stack+0x1e7>
 63a:	60 81       	ld	r22, Z
 63c:	71 81       	ldd	r23, Z+1	; 0x01
 63e:	80 e0       	ldi	r24, 0x00	; 0
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	0e 5f       	subi	r16, 0xFE	; 254
 644:	1f 4f       	sbci	r17, 0xFF	; 255
 646:	a3 01       	movw	r20, r6
 648:	0e 94 08 04 	call	0x810	; 0x810 <__ultoa_invert>
 64c:	88 2e       	mov	r8, r24
 64e:	86 18       	sub	r8, r6
 650:	fb 2d       	mov	r31, r11
 652:	ff 77       	andi	r31, 0x7F	; 127
 654:	3f 2e       	mov	r3, r31
 656:	36 fe       	sbrs	r3, 6
 658:	0d c0       	rjmp	.+26     	; 0x674 <__stack+0x215>
 65a:	23 2d       	mov	r18, r3
 65c:	2e 7f       	andi	r18, 0xFE	; 254
 65e:	a2 2e       	mov	r10, r18
 660:	89 14       	cp	r8, r9
 662:	58 f4       	brcc	.+22     	; 0x67a <__stack+0x21b>
 664:	34 fe       	sbrs	r3, 4
 666:	0b c0       	rjmp	.+22     	; 0x67e <__stack+0x21f>
 668:	32 fc       	sbrc	r3, 2
 66a:	09 c0       	rjmp	.+18     	; 0x67e <__stack+0x21f>
 66c:	83 2d       	mov	r24, r3
 66e:	8e 7e       	andi	r24, 0xEE	; 238
 670:	a8 2e       	mov	r10, r24
 672:	05 c0       	rjmp	.+10     	; 0x67e <__stack+0x21f>
 674:	b8 2c       	mov	r11, r8
 676:	a3 2c       	mov	r10, r3
 678:	03 c0       	rjmp	.+6      	; 0x680 <__stack+0x221>
 67a:	b8 2c       	mov	r11, r8
 67c:	01 c0       	rjmp	.+2      	; 0x680 <__stack+0x221>
 67e:	b9 2c       	mov	r11, r9
 680:	a4 fe       	sbrs	r10, 4
 682:	0f c0       	rjmp	.+30     	; 0x6a2 <__stack+0x243>
 684:	fe 01       	movw	r30, r28
 686:	e8 0d       	add	r30, r8
 688:	f1 1d       	adc	r31, r1
 68a:	80 81       	ld	r24, Z
 68c:	80 33       	cpi	r24, 0x30	; 48
 68e:	21 f4       	brne	.+8      	; 0x698 <__stack+0x239>
 690:	9a 2d       	mov	r25, r10
 692:	99 7e       	andi	r25, 0xE9	; 233
 694:	a9 2e       	mov	r10, r25
 696:	09 c0       	rjmp	.+18     	; 0x6aa <__stack+0x24b>
 698:	a2 fe       	sbrs	r10, 2
 69a:	06 c0       	rjmp	.+12     	; 0x6a8 <__stack+0x249>
 69c:	b3 94       	inc	r11
 69e:	b3 94       	inc	r11
 6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__stack+0x24b>
 6a2:	8a 2d       	mov	r24, r10
 6a4:	86 78       	andi	r24, 0x86	; 134
 6a6:	09 f0       	breq	.+2      	; 0x6aa <__stack+0x24b>
 6a8:	b3 94       	inc	r11
 6aa:	a3 fc       	sbrc	r10, 3
 6ac:	11 c0       	rjmp	.+34     	; 0x6d0 <__stack+0x271>
 6ae:	a0 fe       	sbrs	r10, 0
 6b0:	06 c0       	rjmp	.+12     	; 0x6be <__stack+0x25f>
 6b2:	b2 14       	cp	r11, r2
 6b4:	88 f4       	brcc	.+34     	; 0x6d8 <__stack+0x279>
 6b6:	28 0c       	add	r2, r8
 6b8:	92 2c       	mov	r9, r2
 6ba:	9b 18       	sub	r9, r11
 6bc:	0e c0       	rjmp	.+28     	; 0x6da <__stack+0x27b>
 6be:	b2 14       	cp	r11, r2
 6c0:	60 f4       	brcc	.+24     	; 0x6da <__stack+0x27b>
 6c2:	b6 01       	movw	r22, r12
 6c4:	80 e2       	ldi	r24, 0x20	; 32
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	0e 94 cc 03 	call	0x798	; 0x798 <fputc>
 6cc:	b3 94       	inc	r11
 6ce:	f7 cf       	rjmp	.-18     	; 0x6be <__stack+0x25f>
 6d0:	b2 14       	cp	r11, r2
 6d2:	18 f4       	brcc	.+6      	; 0x6da <__stack+0x27b>
 6d4:	2b 18       	sub	r2, r11
 6d6:	02 c0       	rjmp	.+4      	; 0x6dc <__stack+0x27d>
 6d8:	98 2c       	mov	r9, r8
 6da:	21 2c       	mov	r2, r1
 6dc:	a4 fe       	sbrs	r10, 4
 6de:	10 c0       	rjmp	.+32     	; 0x700 <__stack+0x2a1>
 6e0:	b6 01       	movw	r22, r12
 6e2:	80 e3       	ldi	r24, 0x30	; 48
 6e4:	90 e0       	ldi	r25, 0x00	; 0
 6e6:	0e 94 cc 03 	call	0x798	; 0x798 <fputc>
 6ea:	a2 fe       	sbrs	r10, 2
 6ec:	17 c0       	rjmp	.+46     	; 0x71c <__stack+0x2bd>
 6ee:	a1 fc       	sbrc	r10, 1
 6f0:	03 c0       	rjmp	.+6      	; 0x6f8 <__stack+0x299>
 6f2:	88 e7       	ldi	r24, 0x78	; 120
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	02 c0       	rjmp	.+4      	; 0x6fc <__stack+0x29d>
 6f8:	88 e5       	ldi	r24, 0x58	; 88
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	b6 01       	movw	r22, r12
 6fe:	0c c0       	rjmp	.+24     	; 0x718 <__stack+0x2b9>
 700:	8a 2d       	mov	r24, r10
 702:	86 78       	andi	r24, 0x86	; 134
 704:	59 f0       	breq	.+22     	; 0x71c <__stack+0x2bd>
 706:	a1 fe       	sbrs	r10, 1
 708:	02 c0       	rjmp	.+4      	; 0x70e <__stack+0x2af>
 70a:	8b e2       	ldi	r24, 0x2B	; 43
 70c:	01 c0       	rjmp	.+2      	; 0x710 <__stack+0x2b1>
 70e:	80 e2       	ldi	r24, 0x20	; 32
 710:	a7 fc       	sbrc	r10, 7
 712:	8d e2       	ldi	r24, 0x2D	; 45
 714:	b6 01       	movw	r22, r12
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	0e 94 cc 03 	call	0x798	; 0x798 <fputc>
 71c:	89 14       	cp	r8, r9
 71e:	38 f4       	brcc	.+14     	; 0x72e <__stack+0x2cf>
 720:	b6 01       	movw	r22, r12
 722:	80 e3       	ldi	r24, 0x30	; 48
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	0e 94 cc 03 	call	0x798	; 0x798 <fputc>
 72a:	9a 94       	dec	r9
 72c:	f7 cf       	rjmp	.-18     	; 0x71c <__stack+0x2bd>
 72e:	8a 94       	dec	r8
 730:	f3 01       	movw	r30, r6
 732:	e8 0d       	add	r30, r8
 734:	f1 1d       	adc	r31, r1
 736:	80 81       	ld	r24, Z
 738:	b6 01       	movw	r22, r12
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	0e 94 cc 03 	call	0x798	; 0x798 <fputc>
 740:	81 10       	cpse	r8, r1
 742:	f5 cf       	rjmp	.-22     	; 0x72e <__stack+0x2cf>
 744:	22 20       	and	r2, r2
 746:	09 f4       	brne	.+2      	; 0x74a <__stack+0x2eb>
 748:	42 ce       	rjmp	.-892    	; 0x3ce <vfprintf+0x24>
 74a:	b6 01       	movw	r22, r12
 74c:	80 e2       	ldi	r24, 0x20	; 32
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	0e 94 cc 03 	call	0x798	; 0x798 <fputc>
 754:	2a 94       	dec	r2
 756:	f6 cf       	rjmp	.-20     	; 0x744 <__stack+0x2e5>
 758:	f6 01       	movw	r30, r12
 75a:	86 81       	ldd	r24, Z+6	; 0x06
 75c:	97 81       	ldd	r25, Z+7	; 0x07
 75e:	02 c0       	rjmp	.+4      	; 0x764 <__stack+0x305>
 760:	8f ef       	ldi	r24, 0xFF	; 255
 762:	9f ef       	ldi	r25, 0xFF	; 255
 764:	2b 96       	adiw	r28, 0x0b	; 11
 766:	e2 e1       	ldi	r30, 0x12	; 18
 768:	0c 94 82 04 	jmp	0x904	; 0x904 <__epilogue_restores__>

0000076c <strnlen_P>:
 76c:	fc 01       	movw	r30, r24
 76e:	05 90       	lpm	r0, Z+
 770:	61 50       	subi	r22, 0x01	; 1
 772:	70 40       	sbci	r23, 0x00	; 0
 774:	01 10       	cpse	r0, r1
 776:	d8 f7       	brcc	.-10     	; 0x76e <strnlen_P+0x2>
 778:	80 95       	com	r24
 77a:	90 95       	com	r25
 77c:	8e 0f       	add	r24, r30
 77e:	9f 1f       	adc	r25, r31
 780:	08 95       	ret

00000782 <strnlen>:
 782:	fc 01       	movw	r30, r24
 784:	61 50       	subi	r22, 0x01	; 1
 786:	70 40       	sbci	r23, 0x00	; 0
 788:	01 90       	ld	r0, Z+
 78a:	01 10       	cpse	r0, r1
 78c:	d8 f7       	brcc	.-10     	; 0x784 <strnlen+0x2>
 78e:	80 95       	com	r24
 790:	90 95       	com	r25
 792:	8e 0f       	add	r24, r30
 794:	9f 1f       	adc	r25, r31
 796:	08 95       	ret

00000798 <fputc>:
 798:	0f 93       	push	r16
 79a:	1f 93       	push	r17
 79c:	cf 93       	push	r28
 79e:	df 93       	push	r29
 7a0:	fb 01       	movw	r30, r22
 7a2:	23 81       	ldd	r18, Z+3	; 0x03
 7a4:	21 fd       	sbrc	r18, 1
 7a6:	03 c0       	rjmp	.+6      	; 0x7ae <fputc+0x16>
 7a8:	8f ef       	ldi	r24, 0xFF	; 255
 7aa:	9f ef       	ldi	r25, 0xFF	; 255
 7ac:	2c c0       	rjmp	.+88     	; 0x806 <fputc+0x6e>
 7ae:	22 ff       	sbrs	r18, 2
 7b0:	16 c0       	rjmp	.+44     	; 0x7de <fputc+0x46>
 7b2:	46 81       	ldd	r20, Z+6	; 0x06
 7b4:	57 81       	ldd	r21, Z+7	; 0x07
 7b6:	24 81       	ldd	r18, Z+4	; 0x04
 7b8:	35 81       	ldd	r19, Z+5	; 0x05
 7ba:	42 17       	cp	r20, r18
 7bc:	53 07       	cpc	r21, r19
 7be:	44 f4       	brge	.+16     	; 0x7d0 <fputc+0x38>
 7c0:	a0 81       	ld	r26, Z
 7c2:	b1 81       	ldd	r27, Z+1	; 0x01
 7c4:	9d 01       	movw	r18, r26
 7c6:	2f 5f       	subi	r18, 0xFF	; 255
 7c8:	3f 4f       	sbci	r19, 0xFF	; 255
 7ca:	31 83       	std	Z+1, r19	; 0x01
 7cc:	20 83       	st	Z, r18
 7ce:	8c 93       	st	X, r24
 7d0:	26 81       	ldd	r18, Z+6	; 0x06
 7d2:	37 81       	ldd	r19, Z+7	; 0x07
 7d4:	2f 5f       	subi	r18, 0xFF	; 255
 7d6:	3f 4f       	sbci	r19, 0xFF	; 255
 7d8:	37 83       	std	Z+7, r19	; 0x07
 7da:	26 83       	std	Z+6, r18	; 0x06
 7dc:	14 c0       	rjmp	.+40     	; 0x806 <fputc+0x6e>
 7de:	8b 01       	movw	r16, r22
 7e0:	ec 01       	movw	r28, r24
 7e2:	fb 01       	movw	r30, r22
 7e4:	00 84       	ldd	r0, Z+8	; 0x08
 7e6:	f1 85       	ldd	r31, Z+9	; 0x09
 7e8:	e0 2d       	mov	r30, r0
 7ea:	09 95       	icall
 7ec:	89 2b       	or	r24, r25
 7ee:	e1 f6       	brne	.-72     	; 0x7a8 <fputc+0x10>
 7f0:	d8 01       	movw	r26, r16
 7f2:	16 96       	adiw	r26, 0x06	; 6
 7f4:	8d 91       	ld	r24, X+
 7f6:	9c 91       	ld	r25, X
 7f8:	17 97       	sbiw	r26, 0x07	; 7
 7fa:	01 96       	adiw	r24, 0x01	; 1
 7fc:	17 96       	adiw	r26, 0x07	; 7
 7fe:	9c 93       	st	X, r25
 800:	8e 93       	st	-X, r24
 802:	16 97       	sbiw	r26, 0x06	; 6
 804:	ce 01       	movw	r24, r28
 806:	df 91       	pop	r29
 808:	cf 91       	pop	r28
 80a:	1f 91       	pop	r17
 80c:	0f 91       	pop	r16
 80e:	08 95       	ret

00000810 <__ultoa_invert>:
 810:	fa 01       	movw	r30, r20
 812:	aa 27       	eor	r26, r26
 814:	28 30       	cpi	r18, 0x08	; 8
 816:	51 f1       	breq	.+84     	; 0x86c <__ultoa_invert+0x5c>
 818:	20 31       	cpi	r18, 0x10	; 16
 81a:	81 f1       	breq	.+96     	; 0x87c <__ultoa_invert+0x6c>
 81c:	e8 94       	clt
 81e:	6f 93       	push	r22
 820:	6e 7f       	andi	r22, 0xFE	; 254
 822:	6e 5f       	subi	r22, 0xFE	; 254
 824:	7f 4f       	sbci	r23, 0xFF	; 255
 826:	8f 4f       	sbci	r24, 0xFF	; 255
 828:	9f 4f       	sbci	r25, 0xFF	; 255
 82a:	af 4f       	sbci	r26, 0xFF	; 255
 82c:	b1 e0       	ldi	r27, 0x01	; 1
 82e:	3e d0       	rcall	.+124    	; 0x8ac <__ultoa_invert+0x9c>
 830:	b4 e0       	ldi	r27, 0x04	; 4
 832:	3c d0       	rcall	.+120    	; 0x8ac <__ultoa_invert+0x9c>
 834:	67 0f       	add	r22, r23
 836:	78 1f       	adc	r23, r24
 838:	89 1f       	adc	r24, r25
 83a:	9a 1f       	adc	r25, r26
 83c:	a1 1d       	adc	r26, r1
 83e:	68 0f       	add	r22, r24
 840:	79 1f       	adc	r23, r25
 842:	8a 1f       	adc	r24, r26
 844:	91 1d       	adc	r25, r1
 846:	a1 1d       	adc	r26, r1
 848:	6a 0f       	add	r22, r26
 84a:	71 1d       	adc	r23, r1
 84c:	81 1d       	adc	r24, r1
 84e:	91 1d       	adc	r25, r1
 850:	a1 1d       	adc	r26, r1
 852:	20 d0       	rcall	.+64     	; 0x894 <__ultoa_invert+0x84>
 854:	09 f4       	brne	.+2      	; 0x858 <__ultoa_invert+0x48>
 856:	68 94       	set
 858:	3f 91       	pop	r19
 85a:	2a e0       	ldi	r18, 0x0A	; 10
 85c:	26 9f       	mul	r18, r22
 85e:	11 24       	eor	r1, r1
 860:	30 19       	sub	r19, r0
 862:	30 5d       	subi	r19, 0xD0	; 208
 864:	31 93       	st	Z+, r19
 866:	de f6       	brtc	.-74     	; 0x81e <__ultoa_invert+0xe>
 868:	cf 01       	movw	r24, r30
 86a:	08 95       	ret
 86c:	46 2f       	mov	r20, r22
 86e:	47 70       	andi	r20, 0x07	; 7
 870:	40 5d       	subi	r20, 0xD0	; 208
 872:	41 93       	st	Z+, r20
 874:	b3 e0       	ldi	r27, 0x03	; 3
 876:	0f d0       	rcall	.+30     	; 0x896 <__ultoa_invert+0x86>
 878:	c9 f7       	brne	.-14     	; 0x86c <__ultoa_invert+0x5c>
 87a:	f6 cf       	rjmp	.-20     	; 0x868 <__ultoa_invert+0x58>
 87c:	46 2f       	mov	r20, r22
 87e:	4f 70       	andi	r20, 0x0F	; 15
 880:	40 5d       	subi	r20, 0xD0	; 208
 882:	4a 33       	cpi	r20, 0x3A	; 58
 884:	18 f0       	brcs	.+6      	; 0x88c <__ultoa_invert+0x7c>
 886:	49 5d       	subi	r20, 0xD9	; 217
 888:	31 fd       	sbrc	r19, 1
 88a:	40 52       	subi	r20, 0x20	; 32
 88c:	41 93       	st	Z+, r20
 88e:	02 d0       	rcall	.+4      	; 0x894 <__ultoa_invert+0x84>
 890:	a9 f7       	brne	.-22     	; 0x87c <__ultoa_invert+0x6c>
 892:	ea cf       	rjmp	.-44     	; 0x868 <__ultoa_invert+0x58>
 894:	b4 e0       	ldi	r27, 0x04	; 4
 896:	a6 95       	lsr	r26
 898:	97 95       	ror	r25
 89a:	87 95       	ror	r24
 89c:	77 95       	ror	r23
 89e:	67 95       	ror	r22
 8a0:	ba 95       	dec	r27
 8a2:	c9 f7       	brne	.-14     	; 0x896 <__ultoa_invert+0x86>
 8a4:	00 97       	sbiw	r24, 0x00	; 0
 8a6:	61 05       	cpc	r22, r1
 8a8:	71 05       	cpc	r23, r1
 8aa:	08 95       	ret
 8ac:	9b 01       	movw	r18, r22
 8ae:	ac 01       	movw	r20, r24
 8b0:	0a 2e       	mov	r0, r26
 8b2:	06 94       	lsr	r0
 8b4:	57 95       	ror	r21
 8b6:	47 95       	ror	r20
 8b8:	37 95       	ror	r19
 8ba:	27 95       	ror	r18
 8bc:	ba 95       	dec	r27
 8be:	c9 f7       	brne	.-14     	; 0x8b2 <__ultoa_invert+0xa2>
 8c0:	62 0f       	add	r22, r18
 8c2:	73 1f       	adc	r23, r19
 8c4:	84 1f       	adc	r24, r20
 8c6:	95 1f       	adc	r25, r21
 8c8:	a0 1d       	adc	r26, r0
 8ca:	08 95       	ret

000008cc <__prologue_saves__>:
 8cc:	2f 92       	push	r2
 8ce:	3f 92       	push	r3
 8d0:	4f 92       	push	r4
 8d2:	5f 92       	push	r5
 8d4:	6f 92       	push	r6
 8d6:	7f 92       	push	r7
 8d8:	8f 92       	push	r8
 8da:	9f 92       	push	r9
 8dc:	af 92       	push	r10
 8de:	bf 92       	push	r11
 8e0:	cf 92       	push	r12
 8e2:	df 92       	push	r13
 8e4:	ef 92       	push	r14
 8e6:	ff 92       	push	r15
 8e8:	0f 93       	push	r16
 8ea:	1f 93       	push	r17
 8ec:	cf 93       	push	r28
 8ee:	df 93       	push	r29
 8f0:	cd b7       	in	r28, 0x3d	; 61
 8f2:	de b7       	in	r29, 0x3e	; 62
 8f4:	ca 1b       	sub	r28, r26
 8f6:	db 0b       	sbc	r29, r27
 8f8:	0f b6       	in	r0, 0x3f	; 63
 8fa:	f8 94       	cli
 8fc:	de bf       	out	0x3e, r29	; 62
 8fe:	0f be       	out	0x3f, r0	; 63
 900:	cd bf       	out	0x3d, r28	; 61
 902:	09 94       	ijmp

00000904 <__epilogue_restores__>:
 904:	2a 88       	ldd	r2, Y+18	; 0x12
 906:	39 88       	ldd	r3, Y+17	; 0x11
 908:	48 88       	ldd	r4, Y+16	; 0x10
 90a:	5f 84       	ldd	r5, Y+15	; 0x0f
 90c:	6e 84       	ldd	r6, Y+14	; 0x0e
 90e:	7d 84       	ldd	r7, Y+13	; 0x0d
 910:	8c 84       	ldd	r8, Y+12	; 0x0c
 912:	9b 84       	ldd	r9, Y+11	; 0x0b
 914:	aa 84       	ldd	r10, Y+10	; 0x0a
 916:	b9 84       	ldd	r11, Y+9	; 0x09
 918:	c8 84       	ldd	r12, Y+8	; 0x08
 91a:	df 80       	ldd	r13, Y+7	; 0x07
 91c:	ee 80       	ldd	r14, Y+6	; 0x06
 91e:	fd 80       	ldd	r15, Y+5	; 0x05
 920:	0c 81       	ldd	r16, Y+4	; 0x04
 922:	1b 81       	ldd	r17, Y+3	; 0x03
 924:	aa 81       	ldd	r26, Y+2	; 0x02
 926:	b9 81       	ldd	r27, Y+1	; 0x01
 928:	ce 0f       	add	r28, r30
 92a:	d1 1d       	adc	r29, r1
 92c:	0f b6       	in	r0, 0x3f	; 63
 92e:	f8 94       	cli
 930:	de bf       	out	0x3e, r29	; 62
 932:	0f be       	out	0x3f, r0	; 63
 934:	cd bf       	out	0x3d, r28	; 61
 936:	ed 01       	movw	r28, r26
 938:	08 95       	ret

0000093a <_exit>:
 93a:	f8 94       	cli

0000093c <__stop_program>:
 93c:	ff cf       	rjmp	.-2      	; 0x93c <__stop_program>
